<div class="tabs">
  <ul>

    <li>
      <a href="#demand">
        Demandes
      </a>
    </li>

    <% unless controller.action_name == "new" %>
      <li>
        <a href="#services">
          Services
        </a>
      </li>
      <li>
        <a href="#devis">
          Devis de la demande <%= @demand %>
        </a>
      </li>
    <% end %>

  </ul>

  <%= simple_form_for([@organization, @demand]) do |f| %>
    <div id="demand">
      <div class="row-fluid">
        <div class="span6">
          <%= f.error_notification %>
          <%= f.input :organization_id, as: :hidden, input_html: { :value => @organization.id } %>

          <%= f.input :name, :label => I18n.t('name'), :input_html => {:class => 'input-xxlarge', :autofocus => (controller.action_name == 'new')} %>
          <%= f.input :business_need, :label => I18n.t('business_need'), :input_html => {:class => 'input-xxlarge' } %>
          <%= f.input :demand_type_id, as: :select, label: "Type de demande", collection: @organization.demand_types, input_html: { class: 'input-xxlarge', disabled: (controller.action_name == "edit") } %>

          <%= f.input :severity_id, as: :select, label: "Severité", collection: @organization.severities, input_html: { class: 'input-xxlarge' } %>
          <%= f.input :criticality_id, as: :select, label: "Criticité", collection: @organization.criticalities, input_html: { class: 'input-xxlarge' } %>

          <% unless @demand.demand_status.nil? %>
            <% if @demand.demand_status.name == "En instruction" || @demand.demand_status.name == "En qualification" %>
              <%= f.input :application_id, as: :select, label: "Application associée", collection: @organization.applications, input_html: { class: 'input-xxlarge' } %>
            <% else %>
              <%= f.input :application_id, as: :select, label: "Application associée", collection: @organization.applications, input_html: { class: 'input-xxlarge', disabled: true } %>
            <% end %>
          <% else %>
            <%= f.input :application_id, as: :select, label: "Application associée", collection: @organization.applications, input_html: { class: 'input-xxlarge' } %>
          <% end %>

          <% if controller.action_name == "edit" %>
            <% if @demand.demand_status.nil? %>
              <%= f.input :demand_status_id,
                          as: :select,
                          label: "Statut de la demande",
                          collection: @demand.get_demand_statuses(@organization, @demand.demand_type),
                          selected: @demand.demand_type.demand_status_id,
                          input_html: { class: 'input-xxlarge' } %>
            <% else %>
              <% if (!("Accepté".in?@demand.projects.map(&:estimation_status).map(&:name)) && (@demand.demand_status.name == "En chiffrage")) %>
                <%= f.input :demand_status_id,
                            as: :select,
                            label: "Statut de la demande",
                            collection: @demand.get_demand_statuses(@organization, @demand.demand_type),
                            disabled: true,
                            input_html: { class: 'input-xxlarge' } %>
              <% else %>
                <%= f.input :demand_status_id,
                            as: :select,
                            label: "Statut de la demande",
                            collection: @demand.get_demand_statuses(@organization, @demand.demand_type),
                            input_html: { class: 'input-xxlarge' } %>
              <% end %>
            <% end %>
          <% end %>

          <div class="actions-tabs">
            <% if action_name == 'new' || action_name=="create" %>
              <%= submit_tag I18n.t('save_and_create'), :class => 'btn btn-primary' %>
              <%= submit_tag I18n.t('save'), :class => 'btn btn-primary' %>
            <% elsif action_name == 'edit' || action_name=="update" %>
              <%= submit_tag I18n.t('save'), :class => 'btn btn-primary' %>
              <%= submit_tag I18n.t('apply'), :class => 'btn btn-primary' %>
            <% end %>
            <%= link_to I18n.t('back'), :back, :class => 'btn btn-primary' %>
          </div>
      </div>

        <div class="span6">
          <%= f.input :attachment, :label => false, as: :file, input_html: { class: 'input-xxlarge' }  %>
          <% if @demand.attachment.to_s.blank? || controller.action_name == "new" %>
            <p>Il n'y a aucun document attaché à cette demande.</p>
          <% else %>
            Pièces jointes à la demande <br>
            <%= link_to File.basename(@demand.attachment.to_s), @demand.attachment.to_s, target: "_blank" %> -
            <%= link_to '', delete_path(demand_id: @demand.id), method: :post, :class => 'fa fa-trash', :title => I18n.t('delete') %>
          <% end %>

          <%= f.input :description, :label => I18n.t('description'), :input_html => {:class => 'input-xxlarge', rows: 5 } %>
          <% unless @demand.new_record? %>
            <% if @demand.demand_type.cost_from == "Projet" %>
              <%= f.input :cost, :label => "Coût", :input_html => {:class => 'input-xxlarge' } %>
            <% else %>
              <span>
                Coût (€) :
              </span>
              <% if "Accepté".in?@demand.projects.map(&:estimation_status).map(&:name) %>
                <%
                   es = EstimationStatus.where(name: "Accepté",organization_id: @demand.organization_id).first
                   project = @demand.projects.where(estimation_status: es.id).first

                   unless project.nil?
                     @fields_coefficients = {}
                     @pfs = {}

                     fields = @organization.fields
                     ProjectField.where(project_id: [project.id]).each do |pf|
                       begin
                         if pf.field_id.in?(fields.map(&:id))
                           if pf.project && pf.views_widget
                             if pf.project_id == pf.views_widget.module_project.project_id
                               @pfs["#{pf.project_id}_#{pf.field_id}".to_sym] = pf.value
                             else
                               # pf.delete
                             end
                           else
                             # pf.delete
                           end
                         else
                           # pf.delete
                         end
                       rescue
                         #puts "erreur"
                       end
                     end

                     fields.each do |f|
                       @fields_coefficients[f.id] = f.coefficient
                     end

                     field = Field.where(organization_id: @demand.organization_id, name: "Coût (k€)").first
                     column = QueryColumn.new(field.name.to_sym,
                                              sortable: "",
                                              caption: "efefef",
                                              field_id: field.id,
                                              organization_id: @current_organization.id)

                     value = column_content(@pfs, column, project, @fields_coefficients)
                   end
                %>
                <br>
                <span class="pull-left" style="font-weight: bold;">
                  <% @demand.cost = value.gsub("<td><span class=\"pull-right\">", '').gsub("</span></td>", "").gsub(",", ".").to_f %>
                  <% @demand.save %>
                  <%= @demand.cost %> k€
                </span>
              <% else %>
              <br>
                -
              <% end %>
            <% end %>
          <% end %>

          <hr>

          <% @demand_demand_type = @demand.demand_type %>

          <% unless @demand_demand_type.nil? %>
            <% @demand_demand_type.agreements.each do |agreement| %>

              <% cs = CriticalitySeverity.where(organization_id: @organization.id,
                                                demand_type_id: @demand_demand_type.nil? ? nil : @demand.demand_type_id,
                                                criticality_id: @demand.criticality_id,
                                                agreement_id: agreement.id,
                                                severity_id: @demand.severity_id).first %>
              <% unless cs.nil? %>
                <% @demand.priority = cs.priority %>
                <% @demand.save %>
              <% end %>

              <% unless cs.nil? %>
                <b>
                  <%= agreement.name %>
                </b> : Priorité <%= @demand.priority %> (<%= cs.nil? ? '-' : cs.duration.to_i %> h.)
                <br>
              <% end %>

              <% unless cs.nil? %>

                <% origin_ds = nil %>
                <% target_ds = nil %>

                <% if agreement.origin_target_mode == "Demande / Demande" %>
                  <% origin_ds = DemandStatus.where(id: cs.origin_status_id).first %>
                  <% target_ds = DemandStatus.where(id: cs.target_status_id).first %>
                <% elsif agreement.origin_target_mode == "Demande / Devis" %>
                  <% origin_ds = DemandStatus.where(id: cs.origin_status_id).first %>
                  <% target_ds = EstimationStatus.where(id: cs.target_status_id).first %>
                <% elsif agreement.origin_target_mode == "Devis / Demande" %>
                  <% origin_ds = EstimationStatus.where(id: cs.origin_status_id).first %>
                  <% target_ds = DemandStatus.where(id: cs.target_status_id).first %>
                <% elsif agreement.origin_target_mode == "Devis / Devis" %>
                  <% origin_ds = EstimationStatus.where(id: cs.origin_status_id).first %>
                  <% target_ds = EstimationStatus.where(id: cs.target_status_id).first %>
                <% end %>

                <% origin_sh = StatusHistory.where(demand: @demand.name, target: origin_ds.name).first %>
                <% target_sh = StatusHistory.where(demand: @demand.name, target: target_ds.name).first %>

                <% unless origin_sh.nil? || target_sh.nil? %>
                  <% elapsed_time = Biz.within(

                      Time.utc(origin_sh.change_date.year,
                               origin_sh.change_date.month,
                               origin_sh.change_date.day,
                               origin_sh.change_date.hour,
                               origin_sh.change_date.min),

                      Time.utc(target_sh.change_date.year,
                               target_sh.change_date.month,
                               target_sh.change_date.day,
                               target_sh.change_date.hour,
                               target_sh.change_date.min)

                  ).in_seconds / 3600 %>

                  La demande est passée au statut <b><%= origin_ds.name %></b> le <b><%= origin_sh.change_date.strftime("%d/%m/%Y à %H:%M")%></b>
                  <br>

                  <% if agreement.origin_target_mode == "Demande / Devis" || agreement.origin_target_mode == "Devis / Demande" || agreement.origin_target_mode == "Devis / Devis" %>
                    <% project = @demand.projects.first %>
                    <% unless project.nil? %>
                      Le devis <%= link_to project, dashboard_path(project) %> associé est passé au statut <b><%= target_ds.name %></b> le <b><%= target_sh.change_date.strftime("%d/%m/%Y à %H:%M") %></b>
                      <br>
                    <% end %>
                  <% end %>

                  <% delay = elapsed_time - cs.duration.to_i %>
                  <% unless delay <= 0 %>
                    L'écart entre les deux changements est de <b><%= elapsed_time.to_i %> heures</b> soit un retard de <b><%= delay %> heures</b>
                  <% end %>

                  <% if cs.duration.to_f >= elapsed_time.to_f %>
                    <% @demand.delayed = false %>
                  <% else %>
                    <% @demand.delayed = true %>
                  <% end %>
                  <% @demand.save %>

                  <% if @demand.delayed == true %>
                    <span class="badge badge-important">
                      En retard
                    </span>
                  <% else %>
                    <span class="badge badge-success">
                      OK
                    </span>
                  <% end %>

                <% end %>
              <% end %>
              <br>
              <br>
            <% end %>
          <% end %>
        </div>
      </div>

      <div class="row-fluid">
        <div class="span12">
          <% begin %>
            <%= link_to 'Supprimer la demande', organization_demand_path(@organization, @demand), confirm: I18n.t('are_you_sure'),
                        method: :delete,
                        :class => 'btn btn-danger pull-right',
                        :title => I18n.t('delete') %>
          <% rescue %>
          <% end %>
        </div>
      </div>
    </div>

    <% unless controller.action_name == "new" %>
      <div id="services">
        <div class="row-fluid">
          <div class="span12" style="overflow: visible;">

            <table class="table tablesorter table-striped table-bordered table-condensed">

              <thead>
                <tr>
                  <th class="center">
                    Sélect.
                  </th>
                  <th class="center">
                    Services
                  </th>
                  <th class="center">
                    Réalisé
                  </th>
                  <th class="center">
                    Date attendue
                  </th>
                  <th class="center">
                    Date de livraison
                  </th>
                  <th class="center">
                    A l'heure
                  </th>
                  <th class="center">
                    Statut
                  </th>
                </tr>
              </thead>

              <% if @demand.demand_type == "ANO" %>
                <% @organization_services = @organization.services.where(name: "Maintenance Corrective").all %>
              <% else %>
                <% unless @demand.demand_type.nil? %>
                  <% @organization_services = @demand.demand_type.services %>
                <% else %>
                  <% @organization_services = [] %>
                <% end %>
              <% end %>
              <% @organization_services.each do |service| %>
                <% sdl = ServiceDemandLivrable.where(organization_id: @organization.id, service_id: service.id, demand: @demand.id).first %>
                <% unless sdl.nil? %>
                  <% unless sdl.service.nil? %>
                    <% sdl_service = sdl.service %>
                    <% sdl_service_livrable = sdl.service.livrable %>
                      <tr>

                        <td class="center">
                          <%= check_box_tag "selected[#{service.id}]", true, sdl.selected, disabled: ("Accepté".in?@demand.projects.map(&:estimation_status).map(&:name)) %>
                        </td>

                        <td>
                          <%= link_to service.name, "#", title: service.description %> (<%= service.wbs_activity_elements.count != 0 ? 'WBS' : 'CF' %>)
                          <%= hidden_field_tag "service_#{service.id}", service.id %>
                        </td>

                        <td class="center">
                          <% if ("Accepté".in?(@demand.projects.map(&:estimation_status).map(&:name))) %>

                            <% color = "" %>
                            <% project = @demand.projects.first %>
                            <% project.module_projects.each do |mp| %>
                              <% if mp.pemodule.alias == "guw" %>
                                <% @guw_types = mp.guw_unit_of_works.map(&:guw_type).select{|i| i.service_id == sdl_service.id } %>
                                <% if sdl.selected == true %>
                                  <% if @guw_types.size >= 1 %>
                                    <% color = "green" %>
                                  <% else %>
                                    <% unless color == "green" %>
                                      <% color = "red" %>
                                    <% end %>
                                  <% end %>
                                <% else %>
                                  <% if @guw_types.size >= 1 %>
                                    <% color = "orange" %>
                                  <% end %>
                                <% end %>
                              <% elsif mp.pemodule.alias == "effort_breakdown" %>

                                <% @mp_wbs_activity_wbs_activity_elements = mp.wbs_activity.wbs_activity_elements.select{|i| i.service_id == sdl_service.id } %>
                                <% if sdl.selected == true %>
                                  <% if @mp_wbs_activity_wbs_activity_elements.size >= 1 %>
                                    <% color = "green" %>
                                  <% else %>
                                    <% unless color == "green" %>
                                      <% color = "red" %>
                                    <% end %>
                                  <% end %>
                                <% else %>
                                  <% if @mp_wbs_activity_wbs_activity_elements.size >= 1 %>
                                    <% color = "orange" %>
                                  <% end %>
                                <% end %>
                              <% end %>
                            <% end %>

                            <% unless color.blank? %>
                              <span class="fa fa-circle <%= color %>"></span>
                            <% end %>

                          <% end %>
                        </td>

                        <td class="center">
                          <% unless sdl.expected_date.nil? %>
                            <%= text_field_tag "expected_date[#{service.id}]", sdl.expected_date.strftime("%d/%m/%Y"), class: "date-picker", style: "width: 80px" %>
                          <% else %>
                            <%= text_field_tag "expected_date[#{service.id}]", "", class: "date-picker", style: "width: 80px" %>
                          <% end %>
                        </td>

                        <td class="center">
                          <% unless sdl.actual_date.nil? %>
                            <%= text_field_tag "actual_date[#{service.id}]", sdl.actual_date.strftime("%d/%m/%Y"), class: "date-picker", style: "width: 80px" %>
                          <% else %>
                            <%= text_field_tag "actual_date[#{service.id}]", "", class: "date-picker", style: "width: 80px" %>
                          <% end %>
                        </td>

                        <td class="center">
                          <% unless sdl.actual_date.nil? || sdl.expected_date.nil? %>
                            <% if sdl.actual_date > sdl.expected_date %>
                              <span class="fa fa-circle red"></span>
                            <% else %>
                              <span class="fa fa-circle green"></span>
                            <% end %>
                          <% else %>
                            -
                          <% end %>
                        </td>

                        <td class="center">
                          <% unless sdl_service_livrable.nil? || sdl.nil? %>
                            <%= select_tag "state[#{service.id}]", options_for_select(sdl_service_livrable.state.split(','), selected: sdl.state), prompt: "Aucun", style: "width: 80px" %>
                          <% end %>
                        </td>

                      </tr>
                  <% end %>
                <% end %>
              <% end %>
            </table>

            <div class="actions-tabs">
              <% if action_name == 'new' || action_name=="create" %>
                <%= submit_tag I18n.t('save_and_create'), :class => 'btn btn-primary' %>
                <%= submit_tag I18n.t('save'), :class => 'btn btn-primary' %>
              <% elsif action_name == 'edit' || action_name=="update" %>
                <%= submit_tag I18n.t('save'), :class => 'btn btn-primary' %>
                <%= submit_tag I18n.t('apply'), :class => 'btn btn-primary' %>
              <% end %>
              <%= link_to I18n.t('back'), :back, :class => 'btn btn-primary' %>
            </div>

          </div>
        </div>
      </div>

      <div id="devis">
        <% unless @projects.nil? %>
          <div class="row-fluid">
            <div class="span12">
              <% if @demand.demand_status.to_s == "En chiffrage" %>
                <% if can? :create_project_from_template, Project %>
                  <%= link_to I18n.t('new_project_from'), projects_from_path(organization_id: @organization.id, demand_id: @demand.id), :class => 'btn' %>
                <% end %>

                <% if can? :create_project_from_scratch, Project %>
                  <%= link_to I18n.t('create_button'), new_project_path(organization_id: @organization.id, demand_id: @demand.id), :class => 'btn' %>
                <% end %>
                <hr>
              <% end %>
              <%= render :partial => 'organizations/organization_demand_projects', object: [@organization, @projects] %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  <% end %>


</div>

<script>
  $(document).ready(function () {
    $(".date-picker").datepicker({
      language: '<%= set_user_language %>',
      autoclose: true,
      todayHighlight: true,
      todayBtn: true
    });
  });
</script>

