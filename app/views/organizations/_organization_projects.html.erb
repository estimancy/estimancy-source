<table class="table table-striped table-bordered table-condensed">
  <tr>
    <th class="action" style="width: 25px;">
      <%= link_to "", "#!",
                  onclick: "toggle_group();",
                  class: "fa fa-check-square-o" %>
    </th>

    <% selected_inline_columns = update_selected_inline_columns(Project) %>
    <% selected_inline_columns.each do |column| %>
      <%= column_header(column) %>
    <% end %>

    <th class="action">
      <%= I18n.t(:actions) %>
    </th>
  </tr>

  <tr style="background-color: #eeeeee;">
    <td></td>
      <% selected_inline_columns.each do |column| %>
        <td>
          <%= text_field_tag column.name, params[column.name], style: "width: 85%; height: 13px;" %>
        </td>
      <% end %>
    <td></td>
  </tr>

  <% @projects.each_with_index do |project, index| %>
    <%# if can_see_estimation?(project) %>
      <tr>

        <td>
          <span>
            <input name="deleted_projects[]" type="checkbox" value="<%= project.id %>"  class="myCHECK" id="<%= project.id %>">
          </span>
        </td>

        <% selected_inline_columns.each do |column| %>
          <%= column_content(@pfs, column, project, @fields_coefficients) %>
        <% end %>

        <td style="min-width: 130px;">
          <% if can_show_estimation?(project) %>
            <%= link_to('', edit_project_path(project, :anchor => 'tabs-1'), :class => 'fa fa-pencil pull-left', style: "color: black; margin-top:4px;", :title => I18n.t('edit')) %>
            <%= link_to('', main_app.add_comment_on_status_change_path(:project_id => project.id), :class => "icon-comment pull-left", style: "color: black; margin-top:-1px;", :title => "#{I18n.t(:label_add_status_change_comment)}" , :remote => true) %> <!-- Link to comment the estimation status change add_comment_on_status_change -->
          <% end %>

          <% if project.private == false || current_user.super_admin == true || can?(:manage, project, estimation_status_id: project.estimation_status_id) %>
            <% if can_alter_estimation?(project) && can?(:alter_estimation_status, project) %>
              <%= link_to('', main_app.add_comment_on_status_change_path(:project_id => project.id), :class => "fa fa-share pull-left", style: "color: black; margin-top:4px;", :title => "#{I18n.t(:button_commit_project)}" , :remote => true) %>
            <% end %>
          <% end %>

          <% if can?(:commit_project, project) %>
            <%= link_to('', set_checkout_version_path(:project_id => project.id), :class => 'fa fa-code-fork pull-left', style: "color: black; margin-top:4px;", :title => I18n.t('button_checkout_project'), remote: true, :confirm => (I18n.t(:confirm_new_branch_project_checkout))) %>
          <% end %>

          <%= link_to('', edit_project_path(project, :anchor => 'tabs-history'), :class => 'fa fa-film pull-left', style: "color: black; margin-top:4px;", :title => I18n.t('label_project_history')) %>

          <%= link_to('', {:controller => 'projects', :action => 'find_use_project', :project_id => project.id}, :remote => true, 'data-project_id' => project.id, :class => 'fa fa-map-marker pull-left', style: "color: black; margin-top:4px;", :id => 'find_use_projects', :title => I18n.t('button_find_use')) %>

          <% if can? :copy_project, project %>
            <%= link_to('', main_app.duplicate_path(project, organization_id: @organization, action_name: "duplication"), :class => 'icon-copy pull-left', :title => I18n.t('button_duplicate_project')) %>
          <% end %>

          <% if (can? :delete_project, project) || (can? :manage, project) %>
            <% if can_delete_estimation?(project) %>
              <%= link_to('', confirm_deletion_path(project_id: project.id), :class => 'icon-trash pull-left', :title => I18n.t('delete'), method: "POST") %>
            <% end %>
          <% end %>
        </td>
      </tr>
    <% end %>
  <%# end %>

  <!--<tr>-->
    <!--<th colspan="100" class="pager form-horizontal">-->
      <!--<%# will_paginate @projects, page_links: false %>-->
    <!--</th>-->
  <!--</tr>-->

  <tr>
    <th colspan="100" class="pager form-horizontal">
      <%= link_to "PrÃ©cedent", organization_estimations_path(@organization.id, max: @max - 25, min: @min - 25) %> -
      <%= link_to "Suivant", organization_estimations_path(@organization.id, max: @max + 25, min: @min + 25) %>
    </th>
  </tr>

</table>

<script>

    function toggle_group(){
        var number_of_checked = 0;
        var number_of_line = 0;

        $(".myCHECK").each(function() {
            if (this.checked)
                number_of_checked = number_of_checked + 1;
            number_of_line = number_of_line + 1
        });
        if (number_of_checked < number_of_line){
            $(".myCHECK").attr("checked", true);
        }
        else if (number_of_checked == number_of_line){
            $(".myCHECK").attr("checked", false);
        }
    }

    function verif_checkbox() {
        var myConfirm = confirm("<%= I18n.t(:are_you_sure)%>");
        if (myConfirm == true) {
            $(".myCHECK").each(function () {

                if (this.checked) {
                    $.ajax({
                        url: "/projects/" + this.id,
                        type: "delete",
                        datatype: "json",
                        data: {
                            "_method": "delete",
                            "commit": "<%= I18n.t(:delete)%>",
                            "yes_confirmation": "selected"
                        },
                        complete: function() {
                            $(this).prop('checked', false);
                            window.location.reload(true);
                        }
                    });

                }
            });
        }
    }


    function delete_all_selected_checkbox_projects() {

        var project_ids_to_delete = [];
        $(".myCHECK").each(function () {
            if ($(this).is(':checked') ) {
                project_ids_to_delete.push($(this).attr('value'));
            }
        });


        $.ajax({
            url: "/destroy_multiple_project",
            type: "GET",
            data: {
                commit: "<%= I18n.t(:delete)%>",
                yes_confirmation: "selected",
                project_ids_to_delete: project_ids_to_delete
            },
            complete: function() {
                $(this).prop('checked', false);
                window.location.reload(true);
            }
        });
    }

   // Allow to destro multiple selected projects
    function delete_all_selected_checkbox_projects1() {

        //$("#destroy_multiple_checked_projects").click(function(){

            alert("test");
            var myConfirm = confirm("<%= I18n.t(:are_you_sure)%>");
            //if (myConfirm == true) {
                var project_ids_to_delete = [];
                $(".myCHECK").each(function () {
                    if ($(this).is(':checked') ) {
                        project_ids_to_delete.push($(this).attr('value'));
                    }
                });

                $.ajax({
                    url: "/destroy_multiple_project",
                    type: "GET",
                    data: {
                        commit: "<%= I18n.t(:delete)%>",
                        yes_confirmation: "selected",
                        project_ids_to_delete: project_ids_to_delete
                    },
                    complete: function() {
                        $(this).prop('checked', false);
                        window.location.reload(true);
                    }
                });
            //}
        //});


    }

</script>
