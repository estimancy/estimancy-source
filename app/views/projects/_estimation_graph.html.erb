<!-- Show the estimate graph with Chartjs -->
<script>
    $(document).ready(function() {
        // Get the current module estimation results
        <% attributes_array = module_project.pemodule.pe_attributes.all.map(&:alias).to_json.html_safe %>
        <% modules = project_modules.map(&:alias).to_json.html_safe %>
        var module_labels = <%= modules %>;

        var options = {
            //Boolean - If we show the scale above the chart data
            scaleOverlay: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //Boolean - If we want to override with a hard coded scale
            scaleOverride: true,
            //** Required if scaleOverride is true **
            //Number - The number of steps in a hard coded scale
            scaleSteps: 4,
            //Number - The value jump in the hard coded scale
            scaleStepWidth: 10,
            //Number - The scale starting value
            scaleStartValue: 0,
            //String - Colour of the scale line
            scaleLineColor: "rgba(0,0,0,.1)",
            //Number - Pixel width of the scale line
            scaleLineWidth: 1,
            //Boolean - Whether to show labels on the scale
            scaleShowLabels: true,
            //Number - Scale label font size in pixels
            scaleFontSize: 12,
            scaleFontColor: "#000",
            annotateLabel: true,

            // new attribute for the CharNew.js library
            annotateDisplay : true,
            savePng : true,
            canvasBorders : true,
            canvasBordersWidth : 2,
            canvasBordersColor : "black",
            yAxisLeft : true,
            yAxisRight : true,
            yAxisLabel : "Y axis",
            yAxisFontFamily : "'Arial'",
            yAxisFontSize : 14,
            yAxisFontStyle : "normal",
            yAxisFontColor : "#666",
            xAxisLabel : "",
            xAxisFontFamily : "'Arial'",
            xAxisFontSize : 14,
            xAxisFontStyle : "normal",
            xAxisFontColor : "#666",
            yAxisUnit : "UNIT",
            yAxisUnitFontFamily : "'Arial'",
            yAxisUnitFontSize : 12,
            yAxisUnitFontStyle : "normal",
            yAxisUnitFontColor : "#666",
            graphTitle : "",
            graphTitleFontFamily : "'Arial'",
            graphTitleFontSize : 24,
            graphTitleFontStyle : "bold",
            graphTitleFontColor : "#666",
            graphSubTitle : "",
            graphSubTitleFontFamily : "'Arial'",
            graphSubTitleFontSize : 18,
            graphSubTitleFontStyle : "normal",
            graphSubTitleFontColor : "#666",
            footNote : "Estimate graph with probables values",
            footNoteFontFamily : "'Arial'",
            footNoteFontSize : 16,
            footNoteFontStyle : "bold",
            footNoteFontColor : "#666",
            legend : true,
            legendFontFamily : "'Arial'",
            legendFontSize : 14,
            legendFontStyle : "normal",
            legendFontColor : "#666",
            legendBlockSize : 12,
            legendBorders : true,
            legendBordersWidth : 2,
            legendBordersColor : "#666",
            //  ADDED PARAMETERS
            graphMin : "DEFAULT",
            graphMax : "DEFAULT"

        }

        var data1 = {
            //labels : ["January","February","March","April","May","June","July"],
            labels : module_labels,
            datasets : [
                {
                    fillColor : "rgba(220,220,220,0.5)",
                    strokeColor : "rgba(220,220,220,1)",
                    pointColor : "rgba(220,220,220,1)",
                    pointStrokeColor : "#fff",
                    //data : [65,59,90,81,56,55,40],
                    data : <%= @dataset[:size].to_json.html_safe %>,
                    title: "effort_man_hour"
                },
                {
                    fillColor : "rgba(151,187,205,0.5)",
                    strokeColor : "rgba(151,187,205,1)",
                    pointColor : "rgba(151,187,205,1)",
                    pointStrokeColor : "#fff",
                    data : [28,48,40,19,96,27,100],
                    title: "Duration"
                }
            ]
        }

        <% data_array = []
           fillColor_array = ["rgba(220,220,220,0.5)", "rgba(151,187,205,0.5)", "rgba(151,187,205,1)", "rgba(220,220,220,1)"]
           iteration = -1
        %>

        // create de data
        <% @attributes_labels.each do |attr|
            attr_data_hash =
            {
                fillColor: fillColor_array[iteration+=1],
                strokeColor: "rgba(220,220,220,1)",
                pointColor: "rgba(220,220,220,1)",
                pointStrokeColor: "#fff",
                data: @dataset[:"#{attr}"],
                title: attr
            }

            data_array << attr_data_hash
        end %>

        // get the data
        var data = {
            labels : module_labels,
            datasets : <%= data_array.to_json.html_safe %>
        }

        //Get the context of the canvas element we want to select
        var ctx = $('#lineChart').get(0).getContext("2d");    //var ctx = document.getElementById("myChart").getContext("2d");
        var barCtx = $('#barChart').get(0).getContext("2d");

        var lineChart = new Chart(ctx).Line(data, options);
        var barChart = new Chart(barCtx).Bar(data, options);
    });
</script>