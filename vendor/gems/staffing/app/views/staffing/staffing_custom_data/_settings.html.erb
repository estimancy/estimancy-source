<h3>
  <%= I18n.t(:calculate_duration_and_size) %>
</h3>

<%
   attribute = PeAttribute.find_by_alias("effort")
   unless current_module_project.previous.first.nil?
     previous_activity = current_module_project.previous.first.wbs_activity
   end

   effort_week_unit = @staffing_model.effort_week_unit.nil? ? 1 : @staffing_model.effort_week_unit

   # unless previous_activity.nil?

   ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                              :module_project_id => current_module_project.id,
                              :in_out => "input").first
   effort = ev.string_data_probable[current_component.id].to_f / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)

   if effort == 0
     ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                                :module_project_id => current_module_project.previous.last,
                                :in_out => "output").first
     begin
       previous_activity_root = current_module_project.previous.last.wbs_activity.wbs_activity_elements.first.root
       effort = ev.string_data_probable[current_component.id][previous_activity_root.id][:value] / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
     rescue
      effort = 0
     end
   end

   @md_duration = @staffing_model.mc_donell_coef * (effort * @staffing_model.standard_unit_coefficient.to_f / effort_week_unit) ** @staffing_model.puissance_n

   # else
   #   ev = EstimationValue.where(:pe_attribute_id => attribute.id,
   #                              :module_project_id => current_module_project.id,
   #                              :in_out => "input").first
   #
   #   @staffing_model.standard_unit_coefficient.nil? ? (staffing_standard_unit_coefficient = 1) : (staffing_standard_unit_coefficient = @staffing_model.standard_unit_coefficient.to_f)
   #
   #   begin
   #     effort = ev.string_data_probable[current_component.id].to_f / staffing_standard_unit_coefficient
   #   rescue
   #     ev = EstimationValue.where(:pe_attribute_id => attribute.id,
   #                                :module_project_id => current_module_project.previous.first,
   #                                :in_out => "output").first
   #     previous_activity_root = current_module_project.previous.first.wbs_activity.wbs_activity_elements.first.root
   #     effort = ev.string_data_probable[current_component.id][previous_activity_root.id][:value] / staffing_standard_unit_coefficient
   #   end
   #
   #   @md_duration = @staffing_model.mc_donell_coef.to_f * (effort.to_f * staffing_standard_unit_coefficient / effort_week_unit) ** @staffing_model.puissance_n
   # end
%>

  <%= simple_form_for @staffing_custom_data, url: staffing.staffing_custom_datum_save_staffing_custom_data_path(@staffing_custom_data), method: :post do |f| %>
    <div class="row-fluid">


      <div class="span2">
        <% unless @staffing_model.enabled_input %>
          <%= hidden_field_tag "staffing_custom_datum[global_effort_value]", effort %>
          <label>Effort (<%= @staffing_model.effort_unit %>)</label>
          <%= text_field_tag "", convert_with_precision(effort, user_number_precision), class: 'input-medium', disabled: true %>
        <% else %>
          <%= f.input :global_effort_value,
                      label: "Effort (#{@staffing_model.effort_unit})",
                      input_html: { :class => 'input-medium',
                                    value: effort } %>
        <% end %>
      </div>

      <div class="span2">
        <label class="radio">
          <input type="radio" name="option_radios" id="optionsRadios1" value="duration_constraint" <%= !(can? :execute_estimation_plan, @project) ? 'disabled' : '' %> <%= (@staffing_custom_data.staffing_constraint == "max_staffing_constraint" ) ? 'checked' : 'checked' %>>
          <label>
            <%= I18n.t(:duration_in_week) %>
          </label>
          <%= f.input :duration,
                      label: false, :input_html => { class: 'input-medium',
                                                     id: "my_id1",
                                                     value: @staffing_custom_data.duration.nil? ? @md_duration.round(user_number_precision) : @staffing_custom_data.duration.round(user_number_precision),
                                                     disabled: !(@staffing_custom_data.staffing_constraint == "duration_constraint" || @staffing_custom_data.staffing_constraint.nil?) || !(can? :execute_estimation_plan, @project) } %>
        </label>

      </div>

      <div class="span2">
        <label class="radio">
          <input type="radio" name="option_radios" id="optionsRadios2" value="max_staffing_constraint" <%= !(can? :execute_estimation_plan, @project) ? 'disabled' : '' %> <%= (@staffing_custom_data.staffing_constraint == "duration_constraint"  || @staffing_custom_data.staffing_constraint.nil?) ? '' : 'checked' %>>
          <label>Staffing max. (Trap√®ze)</label>
          <%= f.input :max_staffing,
                      label: false,
                      :input_html => { class: 'input-medium commonclass',
                                       id: "my_id2",
                                       value: @staffing_custom_data.max_staffing.to_f.round(user_number_precision),
                                       disabled: !(@staffing_custom_data.staffing_constraint == "max_staffing_constraint") || !(can? :execute_estimation_plan, @project) } %>
        </label>
      </div>

      <div class="span2">
        <label>Staffing max. (Rayleigh)</label>
        <%= f.input :max_staffing_rayleigh,
                    label: false, :input_html => { class: 'input-medium commonclass',
                                                   id: "my_id3",
                                                   value: @staffing_custom_data.max_staffing_rayleigh.to_f.round(user_number_precision),
                                                   disabled: true } %>
      </div>

    </div>

    <% if can? :execute_estimation_plan, @project %>
      <button name="actuals_based_on[custom]" type="submit" class="btn btn-mini pull-right button_margin_right">
        <%= I18n.t(:launch_calculation) %>
      </button>

      <button name="actuals_based_on[mcdonell]" type="submit" class="btn btn-mini pull-right button_margin_right">
        <%= I18n.t(:reinitialize_delay_staffing) %>
      </button>
    <% end %>

    <%= link_to I18n.t(:export), staffing.staffing_model_export_staffing_path(@staffing_custom_data), :method => 'post', :class=> "btn btn-mini pull-right button_margin_right"%>

    <h4>
      <b>
        <%= I18n.t(:graphical_output)%>
      </b>
    </h4>

    <div class="row-fluid">
      <div class="span12">
        <div id="staffing_trapeze_chart"></div>
      </div>
    </div>


    <div class="row-fluid">
      <div class="span12">

        <h4>
          <b>
            <%= I18n.t(:Staffing_distribution) %>
          </b>
        </h4>

        <div class="row-fluid">
          <div class="span12">

            <% trapeze_theoretical_coordinates = @staffing_custom_data.trapeze_chart_theoretical_coordinates %>
            <% rayleigh_theoretical_coordinates = @staffing_custom_data.rayleigh_chart_theoretical_coordinates %>
            <% actual_coordinates = @staffing_custom_data.chart_actual_coordinates %>
            <% trapeze_staffing_theorique = 0 %>
            <% rayleigh_staffing_theorique = 0 %>
            <% staffing_actuel = 0 %>

            <% unless @staffing_custom_data.duration.nil? and @staffing_custom_data.rayleigh_duration.nil? %>
              <table class="table table-striped table-bordered table-condensed">
                <tr>
                  <th><%= I18n.t(:periode) %></th>
                  <% for t in 0..[@staffing_custom_data.duration.to_f, @staffing_custom_data.rayleigh_duration.to_f].max %>
                    <th><%= "P#{t}" %></th>
                  <% end %>
                </tr>

                <tr>
                  <td><%= I18n.t(:theoretical_trapeze) %></td>

                  <% trapeze_theoretical_coordinates.each do |(coord,value)| %>
                    <% rounded_value = value.nil? ? 0 : value.round(1) %>
                    <% trapeze_staffing_theorique += rounded_value %>
                    <td><%= convert_with_precision(rounded_value, user_number_precision, true) %></td>
                  <% end %>
                </tr>

                <tr>
                  <td><%= I18n.t(:theoretical_rayleigh) %></td>
                  <% rayleigh_theoretical_coordinates.each do |(coord,value)| %>
                    <% rounded_value = value.nil? ? 0 : value.round(1) %>
                    <% rayleigh_staffing_theorique += rounded_value %>
                    <td><%= rounded_value %></td>
                  <% end %>
                </tr>

                <tr>
                  <td><%= I18n.t(:Number_of_people) %></td>
                  <% actual_coordinates.each do |(coord,value)| %>
                    <% rounded_value = value.nil? ? 0 : value.round(1) %>
                    <% staffing_actuel += rounded_value %>
                    <td>
                      <%= text_field_tag "actuals[#{coord}]", convert_with_precision(rounded_value, user_number_precision, true), class: "input-mini" %>
                    </td>
                  <% end %>

                </tr>
              </table>
            <% else %>
              <%= I18n.t(:no_duration_established) %>
            <% end %>

            <% if can? :execute_estimation_plan, @project %>
              <button name="actuals_based_on[custom]" type="submit" class="btn btn-info btn-mini pull-right button_margin_right">
                <%= I18n.t(:update_restraint_effort) %>
              </button>

              <button name="actuals_based_on[trapeze]" type="submit" class="btn btn-info btn-mini pull-right button_margin_right">
                <%= I18n.t(:initialize_restraint) %>
              </button>
            <% end %>
          </div>
        </div>

      </div>
    </div>


  <div class="row-fluid">
    <div class="span3">

      <table class="table">
        <tr>
          <td>
            <b>
              Effort Trap√®ze
            </b>
          </td>
          <td>
            <%= convert_with_precision(trapeze_staffing_theorique.to_f / @staffing_model.standard_unit_coefficient * effort_week_unit, user_number_precision)  %>
          </td>
        </tr>
        <tr>
          <td>
            <b>
              Staffing Max Trapeze
            </b>
          </td>
          <td>
            <%= @staffing_custom_data.trapeze_chart_theoretical_coordinates.map(&:last).max.to_f.round(user_number_precision)  %>
          </td>
        </tr>
        <tr>
          <td>
            <b>
              Effort Rayleigh
            </b>
          </td>
          <td>
            <%= convert_with_precision(rayleigh_staffing_theorique.to_f / @staffing_model.standard_unit_coefficient * effort_week_unit, user_number_precision)  %>
          </td>
        </tr>
        <tr>
          <td>
            <b>
              Staffing Max Rayleigh
            </b>
          </td>
          <td>
            <%= @staffing_custom_data.rayleigh_chart_theoretical_coordinates.map(&:last).max.to_f.round(user_number_precision)  %>
          </td>
        </tr>
        <tr>
          <td>
            <b>
              Effort retenu
            </b>
          </td>
          <td>
            <%= convert_with_precision(staffing_actuel / @staffing_model.standard_unit_coefficient * effort_week_unit , user_number_precision) %>
          </td>
        </tr>
        <tr>
          <td>
            <b>
              Staffing Max retenu
            </b>
          </td>
          <td>
            <%= @staffing_custom_data.chart_actual_coordinates.map(&:last).max.to_f.round(2) %>
          </td>
        </tr>
      </table>
    </div>
  </div>

  <% end %>

<script>

$('#optionsRadios1').click(function (e) {
  $("#my_id2").attr('disabled', "disabled")
  $("#my_id1").removeAttr('disabled')
})
$('#optionsRadios2').click(function (e) {
  $("#my_id1").attr('disabled', "disabled")
  $("#my_id2").removeAttr('disabled')
})
refresh_chart();

$('#myTab a').click(function (e) {
  e.preventDefault();
  $(this).tab('show');
  refresh_chart();
  $.cookie("lastTab", $(this).attr('href'))
});

function refresh_chart() {
    $('#staffing_trapeze_chart').highcharts({
      title: {
        text: '<%= I18n.t("R√©partition des ressources en fonction du temps") %>'
      },
      xAxis: {
        min: 0,
        title: {
          text: '<%= I18n.t("Evolution du temps") %>'
        }
      },
      yAxis: {
        min: 0,
        title: {
          text: '<%= I18n.t(:staffing) %>'
        }
      },
      plotOptions: {
        column: {
          pointPadding: 0,
          borderWidth: 0
        },
        line: {
          marker: {
            enabled: false
          }
        }
      },
      series: [{
        name: '<%= I18n.t("R√©partition en trap√®ze th√©orique") %>',
        type: 'column',
        data: <%= @staffing_custom_data.trapeze_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>
      },{
        name: '<%= I18n.t("R√©partition en trap√®ze personnalis√©") %>',
        type: 'column',
        data: <%= @staffing_custom_data.chart_actual_coordinates.map{|i| i.last.round(1)} %>,
        color: '#7CB9E8'
      },{
        type: 'spline',
        name: '<%= I18n.t("Vos contraintes") %>',
        data: <%= @staffing_custom_data.rayleigh_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#CC0000',
        marker: {
          enabled: false
        }
      },{
        type: 'spline',
        name: '<%= I18n.t("R√©partition optimal") %>',
        data: <%= @staffing_custom_data.mcdonnell_chart_theorical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#000000',
        marker: {
          enabled: false
        }
      }]
    });
}

</script>
