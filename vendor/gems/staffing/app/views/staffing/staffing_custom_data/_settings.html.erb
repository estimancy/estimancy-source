<h3>
  Calcul de la durée et de la taille des équipes
</h3>
<!--<div class="alert alert-dismissable">-->
  <!--<div class="row-fluid">-->
    <!--<div class="span6" style="border-right-style: solid; border-right: thick double">-->
      <!--Le module d'équipe permet de calculer la durée et la taille des équipes du projet. Nous proposons 2 méthodes: <br>-->
      <!--<b>-->
        <!--- Approche linéaire (trapèze) <br>-->
        <!--- Courbe de Rayleigh-->
      <!--</b>-->
    <!--</div>-->

    <!--<div class="span6">-->
      <!--Si nous ne disposons pas de la durée, nous proposons de la calculer à l'aide de la formule de <b>McDonnell</b>: <br>-->
      <!--Durée = <b>coef. * K^n</b>     ( K = <b>Effort</b> en hommes/semaines ou hommes/mois )<br>-->
      <!--On a : <b>coef</b> = <%# @staffing_model.mc_donell_coef %> et <b>n</b> = <%# @staffing_model.puissance_n %>; Par défaut coef=6 et n = 1/3-->
    <!--</div>-->
  <!--</div>-->
<!--</div>-->

<%
   previous_activity = current_module_project.previous.first.wbs_activity
   attribute = PeAttribute.find_by_alias("effort")
   unless previous_activity.nil?
     previous_activity_root = current_module_project.previous.first.wbs_activity.wbs_activity_elements.first.root
     begin
       ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                                           :module_project_id => current_module_project.previous.first,
                                           :in_out => "output").first.string_data_probable[current_component.id][previous_activity_root.id][:value]
     rescue
       ev = nil
     end
   else
     ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                                    :module_project_id => current_module_project.id,
                                    :in_out => "input").first.string_data_probable[current_component.id]
   end

   if ev.nil?
     effort = 0
   else
     effort = ev / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
   end
%>

<%= simple_form_for @staffing_custom_data, url: staffing.staffing_custom_datum_save_staffing_custom_data_path(@staffing_custom_data), method: :post do |f| %>

  <div class="row-fluid">
    <div class="span12">
      <div class="row-fluid">
        <div class="span2">
          <h4>
            <b>Attributs d'entrées </b>
          </h4>
          <%= f.input :global_effort_value, label: "Effort (#{@staffing_model.effort_unit})", :input_html => { :class => 'input-medium', value: effort.nil? ? '' : effort.round(1) } %>
        </div>

        <div class="span5">
          <% trapeze_parameters = @staffing_custom_data.trapeze_parameter_values %>

          <h4>
            <b>Paramètres du Trapèze </b>
          </h4>

          <% if @staffing_custom_data.duration.nil? %>
            <%= f.input :duration, label: "Durée (en semaine)", :input_html => { :class => 'input-medium', value: (@staffing_model.mc_donell_coef * effort.to_i ** @staffing_model.puissance_n).round(0) } %>
          <% else %>
            <%= f.input :duration, label: "Durée (en semaine)", :input_html => { :class => 'input-medium'} %>
          <% end %>

            <%= f.simple_fields_for :trapeze_parameter_values do |ff| %>
            <div class="row-fluid">
              <div class="span2"><%= ff.input :x0, label: "x0", :input_html => { value: trapeze_parameters['x0'], :class => 'input-mini'} %></div>
              <div class="span2"><%= ff.input :y0, label: "y0", :input_html => { value: trapeze_parameters[:y0], :class => 'input-mini'} %></div>
              <div class="span2"><%= ff.input :x1, label: "x1", :input_html => { value: trapeze_parameters[:x1], :class => 'input-mini'} %></div>
              <div class="span2"><%= ff.input :x2, label: "x2", :input_html => { value: trapeze_parameters[:x2], :class => 'input-mini'} %></div>
              <div class="span2"><%= ff.input :x3, label: "x3", :input_html => { value: trapeze_parameters[:x3], :class => 'input-mini'} %></div>
              <div class="span2"><%= ff.input :y3, label: "y3", :input_html => { value: trapeze_parameters[:y3], :class => 'input-mini'} %></div>
            </div>
          <% end %>

          <% if can? :execute_estimation_plan, @project %>
            <button name="actuals_based_on[trapeze]" type="submit" class="btn btn-success btn-mini pull-right">
              Initialiser le retenu
            </button>
            <button name="actuals_based_on[custom]" type="submit" class="btn btn-info btn-mini pull-right button_margin_right">
              Calculer
            </button>
          <% end %>

        </div>

        <div class="span5">
          <h4>
            <b>Paramètre de Rayleigh </b>
          </h4>

          <div class="row-fluid">
            <div class="span4">
              <%= f.input :staffing_constraint, as: :select, collection: [['Contrainte de staffing max', 'max_staffing_constraint'], ['Contrainte de durée', 'duration_constraint']], label: 'Contrainte imposée', include_blank: false, :input_html => { :class => 'input-medium'} %>
            </div>
            <div class="span4">
              <%= f.input :max_staffing, label: "Staffing", :input_html => { :class => 'input-medium'} %>
            </div>
            <div class="span4">
              <%= f.input :rayleigh_duration, label: "Durée", :input_html => { :class => 'input-medium'} %>
            </div>
          </div>

          <% if can? :execute_estimation_plan, @project %>
            <button name="actuals_based_on[rayleigh]" type="submit" class="btn btn-success btn-mini pull-right">
              Initialiser le retenu
            </button>
            <button name="actuals_based_on[custom]" type="submit" class="btn btn-inverse btn-mini pull-right button_margin_right">
              Calculer
            </button>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span12">
      <h4>
        <b>
          Sortie graphique
        </b>
      </h4>
      <!-- Affichage du trapèze de Staffing -->
      <div class="row-fluid">
        <div class="span12">
          <div id="staffing_trapeze_chart">
          </div>
        </div>
      </div>

      <h4>
        <b>
          Répartition du staffing
        </b>
      </h4>
      <div class="row-fluid">
        <div class="span12">

          <% trapeze_theoretical_coordinates = @staffing_custom_data.trapeze_chart_theoretical_coordinates %>
          <% rayleigh_theoretical_coordinates = @staffing_custom_data.rayleigh_chart_theoretical_coordinates %>
          <% actual_coordinates = @staffing_custom_data.chart_actual_coordinates %>
          <% trapeze_staffing_theorique = 0 %>
          <% rayleigh_staffing_theorique = 0 %>
          <% staffing_actuel = 0 %>

          <% unless @staffing_custom_data.duration.nil? and @staffing_custom_data.rayleigh_duration.nil? %>
            <table class="table table-striped table-bordered table-condensed">
              <tr>
                <th>Période</th>
                <% for t in 0..[@staffing_custom_data.duration.to_f, @staffing_custom_data.rayleigh_duration.to_f].max %>
                  <th><%= "P#{t}" %></th>
                <% end %>
              </tr>

              <tr>
                <td>Trapèze théorique</td>
                <% trapeze_theoretical_coordinates.each do |(coord,value)| %>
                  <% rounded_value = value.nil? ? 0 : value.round(1) %>
                  <% trapeze_staffing_theorique += rounded_value %>
                  <td><%= rounded_value %></td>
                <% end %>
              </tr>

              <tr>
                <td>Rayleigh théorique</td>
                <% rayleigh_theoretical_coordinates.each do |(coord,value)| %>
                  <% rounded_value = value.nil? ? 0 : value.round(1) %>
                  <% rayleigh_staffing_theorique += rounded_value %>
                  <td><%= rounded_value %></td>
                <% end %>
              </tr>

              <tr>
                <td>Effort retenu</td>
                <% actual_coordinates.each do |(coord,value)| %>
                  <% rounded_value = value.nil? ? 0 : value.round(1) %>
                  <% staffing_actuel += rounded_value %>
                  <td><%= text_field_tag "actuals[#{coord}]", rounded_value, class: "input-mini" %></td>
                <% end %>
              </tr>
            </table>
          <% else %>
            Aucune durée n'a été établie
          <% end %>
        </div>
      </div>

      <div class="row-fluid">
        <div class="span10">
          <p>
            <span class="badge badge-important">
              <b>
                Staffing Trapeze maximum : <%= @staffing_custom_data.calculated_staffing.to_f.round(1) %>
              </b>
            </span>
          </p>
          <p>
            <span class="badge badge-important">
              <b>
                Staffing Rayleigh maximum : <%= @staffing_custom_data.max_staffing.to_f.round(1) %>
              </b>
            </span>
          </p>

          <p>
            <span class="badge badge-important">
              <b>
                Effort Trapèze : <%= trapeze_staffing_theorique.to_f.round(2) %>
              </b>
            </span>
          </p>

          <p>
            <span class="badge badge-important">
              <b>
                Effort Rayleigh : <%= rayleigh_staffing_theorique.to_f.round(2) %>
              </b>
            </span>
          </p>

          <p>
            <span class="badge badge-info">
              <b>
                Effort retenu : <%= staffing_actuel.to_f.round(2) %>
              </b>
            </span>
          </p>

          <p>
            <span class="badge badge-info">
              <b>
                Durée retenu : <%= (@staffing_custom_data.chart_actual_coordinates.size - 1).to_f.round(2) %>
              </b>
            </span>
          </p>

          <p>
            <span class="badge badge-info">
              <b>
                Staffing retenu : <%= @staffing_custom_data.chart_actual_coordinates.map(&:last).max.to_f.round(2) %>
              </b>
            </span>
          </p>
        </div>
        <div class="span2">
          <% if can? :execute_estimation_plan, @project %>
            <button name="actuals_based_on[custom]" type="submit" class="btn btn-success btn-mini pull-right">
              Mettre à jour le l'effort retenu
            </button>
          <% end %>
        </div>
      </div>

      <script>
        $(function () {
          $('#staffing_trapeze_chart').highcharts({
            chart: {
              type: 'column'
            },
            title: {
              text: 'Répartition des ressources en fonction du temps'
            },
            xAxis: {
              min: 0,
              title: {
                text: 'Evolution du temps'
              }
            },
            yAxis: {
              min: 0,
              title: {
                text: 'Nombre de personne'
              }
            },
            plotOptions: {
              column: {
                pointPadding: 0.2,
                borderWidth: 0
              }
            },
            series: [{
              name: 'Trapèze théorique',
              data: <%= @staffing_custom_data.trapeze_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>
//              events: {
//                legendItemClick: function () {
//                  document.cookie = 'trapeze=1; expires=Mon, 1 Mar 2019 00:00:00 UTC; path=/'
//                }
//              }

            },
              {
                name: 'Rayleigh théorique',
                data: <%= @staffing_custom_data.rayleigh_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>

              },
              {
                name: 'Courbe actualisé',
                data: <%= @staffing_custom_data.chart_actual_coordinates.map{|i| i.last.round(1)} %>

              }]
          });
        });
      </script>
    </div>
  </div>

  <hr>

<% end %>