<h3>
<%= I18n.t(:calculate_duration_and_size) %>
</h3>

<%
 attribute = PeAttribute.find_by_alias("effort")
 unless current_module_project.previous.first.nil?
  previous_activity = current_module_project.previous.first.wbs_activity
 end

 effort_week_unit = @staffing_model.effort_week_unit.nil? ? 1 : @staffing_model.effort_week_unit

 unless previous_activity.nil?
   begin
     ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                                 :module_project_id => current_module_project.previous.first,
                                 :in_out => "output").first
   rescue
     ev = nil
   end

   begin
     previous_activity_root = current_module_project.previous.first.wbs_activity.wbs_activity_elements.first.root
     effort = ev.string_data_probable[current_component.id][previous_activity_root.id][:value] / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
   rescue
     effort = ev.string_data_probable[current_component.id].to_f / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
   end

   @md_duration = @staffing_model.mc_donell_coef * (effort * @staffing_model.standard_unit_coefficient / effort_week_unit) ** @staffing_model.puissance_n

 else
   ev = EstimationValue.where(:pe_attribute_id => attribute.id,
                                  :module_project_id => current_module_project.id,
                                  :in_out => "input").first

   begin
     previous_activity_root = current_module_project.previous.first.wbs_activity.wbs_activity_elements.first.root
     effort = ev.string_data_probable[current_component.id][previous_activity_root.id][:value] / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
   rescue
     effort = ev.string_data_probable[current_component.id].to_f / (@staffing_model.v.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
   end

   @md_duration = @staffing_model.mc_donell_coef * (effort * @staffing_model.standard_unit_coefficient / effort_week_unit) ** @staffing_model.puissance_n
 end
%>

  <%= simple_form_for @staffing_custom_data, url: staffing.staffing_custom_datum_save_staffing_custom_data_path(@staffing_custom_data), method: :post do |f| %>
    <div class="row-fluid">


      <div class="span2">
        <%= f.input :global_effort_value,
                    label: "Effort (#{@staffing_model.effort_unit})",
                    input_html: { :class => 'input-medium', value: effort == 0 ? '' : effort.round(user_number_precision) },
                    readonly: @staffing_model.enabled_input %>
      </div>

      <div class="span2">
        <label class="radio">
          <input type="radio" name="option_radios" id="optionsRadios1" value="duration_constraint" <%= (@staffing_custom_data.staffing_constraint == "duration_constraint" || @staffing_custom_data.duration.nil? ) ? 'checked' : '' %>>
          <label>
            <%= I18n.t(:duration_in_week) %>
          </label>
          <%= f.input :duration, label: false, :input_html => { :class => 'input-medium', :id => "my_id1", value: @staffing_custom_data.duration.nil? ? @md_duration.round(user_number_precision) : @staffing_custom_data.duration } %>
        </label>

      </div>

      <div class="span2">
        <label class="radio">
          <input type="radio" name="option_radios" id="optionsRadios2" value="max_staffing_constraint" <%= @staffing_custom_data.staffing_constraint == "max_staffing_constraint" ? 'checked' : '' %>>
          <label>Staffing maximum (Trapèze)</label>
          <%= f.input :max_staffing, label: false, :input_html => { :class => 'input-medium commonclass', :id => "my_id2", disabled: true, value: @staffing_custom_data.max_staffing.to_f.round(user_number_precision) } %>
        </label>
      </div>

      <div class="span2">
        <label>Staffing maximum (Rayleigh)</label>
        <%= f.input :max_staffing_rayleigh, label: false, :input_html => { :class => 'input-medium commonclass', :id => "my_id3", disabled: true, value: @staffing_custom_data.max_staffing_rayleigh.to_f.round(user_number_precision) } %>
      </div>

    </div>

    <button name="actuals_based_on[custom]" type="submit" class="btn btn-mini pull-right button_margin_right">
      Lancer le calcul
    </button>


    <button name="actuals_based_on[mcdonell]" type="submit" class="btn btn-mini pull-right button_margin_right">
      Réinitialiser le délai et le staffing
    </button>

    <h4>
      <b>
        <%= I18n.t(:graphical_output)%>
      </b>
    </h4>

    <div class="row-fluid">
      <div class="span12">
        <div id="staffing_trapeze_chart"></div>
      </div>
    </div>


    <div class="row-fluid">
      <div class="span12">

        <h4>
          <b>
            <%= I18n.t(:Staffing_distribution) %>
          </b>
        </h4>

        <div class="row-fluid">
          <div class="span12">

            <% trapeze_theoretical_coordinates = @staffing_custom_data.trapeze_chart_theoretical_coordinates %>
            <% rayleigh_theoretical_coordinates = @staffing_custom_data.rayleigh_chart_theoretical_coordinates %>
            <% actual_coordinates = @staffing_custom_data.chart_actual_coordinates %>
            <% trapeze_staffing_theorique = 0 %>
            <% staffing_actuel = 0 %>

            <% unless @staffing_custom_data.duration.nil? and @staffing_custom_data.rayleigh_duration.nil? %>
              <table class="table table-striped table-bordered table-condensed">
                <tr>
                  <th>Période</th>
                  <% for t in 0..[@staffing_custom_data.duration.to_f, @staffing_custom_data.rayleigh_duration.to_f].max %>
                    <th><%= "P#{t}" %></th>
                  <% end %>
                </tr>

                <tr>
                  <td><%= I18n.t(:theoretical_trapeze) %></td>

                  <% trapeze_theoretical_coordinates.each do |(coord,value)| %>
                    <% rounded_value = value.nil? ? 0 : value.round(1) %>
                    <% trapeze_staffing_theorique += rounded_value %>
                    <td><%= rounded_value %></td>
                  <% end %>
                </tr>

                <tr>
                  <td><%= I18n.t(:Number_of_people) %></td>
                  <% actual_coordinates.each do |(coord,value)| %>
                    <% rounded_value = value.nil? ? 0 : value.round(1) %>
                    <% staffing_actuel += rounded_value %>
                    <td>
                      <%= text_field_tag "actuals[#{coord}]", rounded_value, class: "input-mini" %>
                    </td>
                  <% end %>

                </tr>
              </table>
            <% else %>
              <%= I18n.t(:no_duration_established) %>
            <% end %>

            <% if can? :execute_estimation_plan, @project %>
              <button name="actuals_based_on[custom]" type="submit" class="btn btn-info btn-mini pull-right button_margin_right">
                <%= I18n.t(:update_restraint_effort) %>
              </button>

              <button name="actuals_based_on[trapeze]" type="submit" class="btn btn-info btn-mini pull-right button_margin_right">
                <%= I18n.t(:initialize_restraint) %>
              </button>

            <% end %>
          </div>
        </div>

      </div>
    </div>


  <div class="row-fluid">
    <div class="span10">
      <p>
        <span class="badge badge-important">
          <b>
            Staffing Trapeze maximum : <%= @staffing_custom_data.calculated_staffing.to_f.round(1) %>
          </b>
        </span>
      </p>

      <p>
        <span class="badge badge-important">
          <b>
            Effort Trapèze : <%= trapeze_staffing_theorique.to_f.round(2) %>
          </b>
        </span>
      </p>

      <p>
        <span class="badge badge-info">
          <b>
            Effort retenu : <%= staffing_actuel.to_f.round(2) %>
          </b>
        </span>
      </p>

      <p>
        <span class="badge badge-info">
          <b>
            Durée retenu : <%= (@staffing_custom_data.chart_actual_coordinates.size - 1).to_f.round(2) %>
          </b>
        </span>
      </p>

      <p>
        <span class="badge badge-info">
          <b>
            Staffing retenu : <%= @staffing_custom_data.chart_actual_coordinates.map(&:last).max.to_f.round(2) %>
          </b>
        </span>
      </p>
    </div>
    </div>

  <% end %>

<script>

$('#optionsRadios1').click(function (e) {
  $("#my_id3").attr('disabled', "disabled")
  $("#my_id2").attr('disabled', "disabled")
  $("#my_id1").removeAttr('disabled')
})
$('#optionsRadios2').click(function (e) {
  $("#my_id1").attr('disabled', "disabled")
  $("#my_id2").removeAttr('disabled')
  $("#my_id3").removeAttr('disabled')
})
refresh_chart();

$('#myTab a').click(function (e) {
  e.preventDefault();
  $(this).tab('show');
  refresh_chart();
  $.cookie("lastTab", $(this).attr('href'))
});

$('.commonclass').keypress(function(event){
//  $(this.id)event.keyCode);
//  alert("id: " + this.id);
});

function refresh_chart() {
    $('#staffing_trapeze_chart').highcharts({
      title: {
        text: 'Répartition des ressources en fonction du temps'
      },
      xAxis: {
        min: 0,
        title: {
          text: 'Evolution du temps'
        }
      },
      yAxis: {
        min: 0,
        title: {
          text: 'Nombre de personnes'
        }
      },
      plotOptions: {
        column: {
          pointPadding: 0,
          borderWidth: 0
        },
        line: {
          marker: {
            enabled: false
          }
        }
      },
      series: [{
        name: 'Répartition en trapèze théorique',
        type: 'column',
        data: <%= @staffing_custom_data.trapeze_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>
      },{
        name: 'Répartition en trapèze personnalisé',
        type: 'column',
        data: <%= @staffing_custom_data.chart_actual_coordinates.map{|i| i.last.round(1)} %>,
        color: '#7CB9E8'
      },{
        type: 'spline',
        name: 'Vos contraintes',
        data: <%= @staffing_custom_data.rayleigh_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#CC0000',
        marker: {
          enabled: false
        }
      },{
        type: 'spline',
        name: 'Répartition optimal',
        data: <%= @staffing_custom_data.mcdonnell_chart_theorical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#000000',
        marker: {
          enabled: false
        }
      }]
    });
}

</script>
