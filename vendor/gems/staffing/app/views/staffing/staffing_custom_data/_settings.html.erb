<h3>
  <%= I18n.t(:calculate_duration_and_size) %>
</h3>

<%
   attribute = @module_project.pemodule.pe_attributes.where(alias: "effort").first
   effort_week_unit = @staffing_model.effort_week_unit.nil? ? 1 : @staffing_model.effort_week_unit.to_f

   if attribute.nil?
     effort = 0
   else
       current_ev = EstimationValue.where(:pe_attribute_id => attribute.id, :module_project_id => current_module_project.id, :in_out => "input").first

       unless current_ev.nil?
           ev_effort_value = current_ev.string_data_probable[current_component.id]

           if ev_effort_value.blank? || !@staffing_model.enabled_input  #effort == 0

               if !current_ev.estimation_value_id.nil?
                 ev = EstimationValue.find(current_ev.estimation_value_id)
               else
                 ev = EstimationValue.where(:pe_attribute_id => attribute.id, :module_project_id => current_module_project.previous.last, :in_out => "output").first
               end

               begin
                 begin
                   previous_activity_root = current_module_project.previous.last.wbs_activity.wbs_activity_elements.first.root
                   effort = ev.string_data_probable[current_component.id][previous_activity_root.id][:value] / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
                 rescue
                   effort = ev.string_data_probable[current_component.id] / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
                 end
               rescue
                 begin
                   effort = ev.string_data_probable[current_component.id].to_f / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
                 rescue
                   effort = 0
                 end
               end
            else
              begin
                ev = current_ev
                effort = ev.string_data_probable[current_component.id].to_f / (@staffing_model.standard_unit_coefficient.nil? ? 1 : @staffing_model.standard_unit_coefficient.to_f)
              rescue
                effort = 0
              end
           end
       end

    end

   @md_duration = @staffing_model.mc_donell_coef * (effort * @staffing_model.standard_unit_coefficient.to_f / effort_week_unit) ** @staffing_model.puissance_n

   x0 = @staffing_model.trapeze_default_values[:x0].to_f / 100
   x1 =  @staffing_model.trapeze_default_values[:x1].to_f / 100
   x2 =  @staffing_model.trapeze_default_values[:x2].to_f / 100
   x3 =  @staffing_model.trapeze_default_values[:x3].to_f / 100
   y0 =  @staffing_model.trapeze_default_values[:y0].to_f / 100
   y3 =  @staffing_model.trapeze_default_values[:y3].to_f / 100

   staffing_trapeze = (2 * (effort.to_f * @staffing_model.standard_unit_coefficient.to_f / effort_week_unit) / @md_duration)   * ( 1 / (x3 + x2 - x1 - x0 + y0*(x1 - x2) + y3*(x3 - x2)))

   form_coef = -Math.log(1-0.97) / (@md_duration * @md_duration)
   t_max_staffing = Math.sqrt(1/(2*form_coef));
   staffing_rayleigh = 2 * (effort.to_f * @staffing_model.standard_unit_coefficient.to_f / effort_week_unit) / (t_max_staffing * Math.sqrt(Math.exp(1))) / 2

%>

<%= simple_form_for @staffing_custom_data, url: staffing.staffing_custom_datum_save_staffing_custom_data_path(@staffing_custom_data), method: :post do |f| %>

  <div class="row-fluid">

    <div class="span6">
      <table class="table">
        <tr>
          <th></th>
          <th>
              <span class="pull-right">
                Standard
              </span>
          </th>
          <th>
              <span class="pull-right">
                Adapté
              </span>
          </th>
          <th>
              <span class="pull-right">
                Ecart
              </span>
          </th>
          <th>
              <span class="pull-right">
                %
              </span>
          </th>
        </tr>
        <tr>
          <td>
              <span class="pull-left">
                Effort (<%= @staffing_model.effort_unit %>)
              </span>
          </td>
          <td>
              <span class="pull-right">
                &nbsp; <%= @staffing_model.effort_unit %>
              </span>
              <span class="reference_effort pull-right">
                <% unless effort.nil? %>
                  <%= effort.to_f.round(2) %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="effort pull-right">
                <% unless @staffing_custom_data.global_effort_value.nil? %>
                  <%= @staffing_custom_data.global_effort_value.round(user_number_precision) %> <%= @staffing_model.effort_unit %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="gap_effort pull-right">
                <% unless @staffing_custom_data.global_effort_value.nil? %>
                  <%= sign((effort.to_f - @staffing_custom_data.global_effort_value.to_f).round(user_number_precision)) %> <%= @staffing_model.effort_unit %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="percent_effort pull-right">
                <% unless @staffing_custom_data.global_effort_value.nil? %>
                  <%= sign(((effort.to_f - @staffing_custom_data.global_effort_value.to_f) / @staffing_custom_data.global_effort_value * 100).round(1)) %> %
                <% end %>
              </span>
          </td>
        </tr>

        <tr>
          <td>
              <span class="pull-left">
                Début : <%= I18n.l(@project.start_date, format: "%d/%m/%Y") %>
              </span>
          </td>
          <td>
              <span class="pull-right">
                <% unless @md_duration.nil? %>
                  <%= I18n.l((@project.start_date + @md_duration.weeks), format: "%d/%m/%Y") %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="pull-right end_date">
                <% unless @md_duration.nil? || @staffing_custom_data.duration.nil? %>
                  <%= I18n.l((@project.start_date + @staffing_custom_data.duration.weeks), format: "%d/%m/%Y") %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="pull-right gap_date">
                <% unless @staffing_custom_data.duration.nil? || @md_duration.nil? %>
                  <%= sign((((@project.start_date + @staffing_custom_data.duration.weeks) - (@project.start_date + @md_duration.weeks)).to_f / 7).round(user_number_precision)) %> sem.
                <% end %>
              </span>
          </td>
          <td>
              <span class="pull-right">
                -
              </span>
          </td>
        </tr>

        <tr>
          <td>
              <span class="pull-left">
                Durée (sem.)
              </span>
          </td>
          <td>
              <span class="pull-right">
                &nbsp; sem.
              </span>
              <span class="reference_duration pull-right">
                <% unless @md_duration.nil? %>
                  <%= @md_duration.to_f.round(user_number_precision) %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="duration pull-right">
                <% unless @staffing_custom_data.duration.nil? %>
                  <%= @staffing_custom_data.duration.round(user_number_precision) %> sem.
                <% end %>
              </span>
          </td>
          <td>
              <span class="gap_duration pull-right">
                <% unless @staffing_custom_data.duration.nil? || @md_duration.nil? %>
                  <%= sign((@staffing_custom_data.duration - @md_duration.to_f).round(user_number_precision)) %> sem.
                <% end %>
              </span>
          </td>
          <td>
              <span class="percent_duration pull-right">
                <% unless @staffing_custom_data.duration.nil? || @md_duration.nil? %>
                  <%= sign(((@staffing_custom_data.duration - @md_duration.to_f) / @md_duration.to_f * 100).round(1)) %> %
                <% end %>
              </span>
          </td>
        </tr>
        <tr>
          <td>
              <span class="pull-left">
                Staffing Trapeze
              </span>
          </td>
          <td>
              <span class="pull-right">
                &nbsp; pers.
              </span>
              <span class="reference_staffing_trapeze pull-right">
                <%= staffing_trapeze.to_f.round(user_number_precision) %>
              </span>
          </td>
          <td>
              <span class="staffing_trapeze pull-right">
                <% unless @staffing_custom_data.max_staffing.nil? %>
                  <%= @staffing_custom_data.max_staffing.to_f.round(user_number_precision) %> pers.
                <% end %>
              </span>
          </td>
          <td>
              <span class="gap_trapeze pull-right">
                <% unless @staffing_custom_data.max_staffing.nil? %>
                  <%= sign((@staffing_custom_data.max_staffing.to_f - staffing_trapeze.to_f).round(user_number_precision)) %> pers.
                <% end %>
              </span>
          </td>
          <td>
              <span class="percent_trapeze pull-right">
                <% unless @staffing_custom_data.max_staffing.nil? %>
                  <%= sign((((@staffing_custom_data.max_staffing.to_f - staffing_trapeze.to_f) / staffing_trapeze.to_f) * 100).round(1)) %> %
                  <% end %>
              </span>
          </td>
        </tr>
        <tr>
          <td>
              <span class="pull-left">
                Staffing Rayleigh
              </span>
          </td>
          <td>
              <span class="pull-right">
                &nbsp; pers.
              </span>
              <span class="reference_staffing_rayleigh pull-right">
                <% unless staffing_rayleigh.nil? %>
                  <%= staffing_rayleigh.to_f.round(user_number_precision) %>
                <% end %>
              </span>
          </td>
          <td>
              <span class="staffing_rayleigh pull-right">
                <% unless @staffing_custom_data.max_staffing_rayleigh.nil? %>
                  <%= @staffing_custom_data.max_staffing_rayleigh.to_f.round(user_number_precision) %> pers.
                <% end %>
              </span>
          </td>
          <td>
              <span class="gap_rayleigh pull-right">
                <% unless @staffing_custom_data.max_staffing_rayleigh.nil? %>
                  <%= sign((@staffing_custom_data.max_staffing_rayleigh - staffing_rayleigh).to_f.round(user_number_precision)) %> pers.
                <% end %>
              </span>
          </td>
          <td>
              <span class="percent_rayleigh pull-right">
                <% unless @staffing_custom_data.max_staffing_rayleigh.nil? %>
                  <%= sign((((@staffing_custom_data.max_staffing_rayleigh - staffing_rayleigh) / staffing_rayleigh) * 100).round(1)) %> %
                <% end %>
              </span>
          </td>

        </tr>
      </table>
      <input type="text" name='percents' id='percent' class="factor-slider" value="<%= @staffing_custom_data.percent %>" />

      <% if can? :execute_estimation_plan, @project %>
        <button name="actuals_based_on[custom]" type="submit" class="btn btn-primary pull-right button_margin_right">
          <%= I18n.t(:calculate_button) %>
        </button>
      <% end %>

      <%= link_to I18n.t(:export), staffing.staffing_model_export_staffing_path(@staffing_custom_data), :method => 'post', :class=> "btn pull-right button_margin_right"%>
    </div>

    <div class="span6">
      <div id="staffing_trapeze_chart"></div>
    </div>

    <% begin %>
      <%= hidden_field_tag "standard_effort", (@staffing_custom_data.standard_effort.blank? ? effort : @staffing_custom_data.standard_effort), class: "standard_effort" %>
      <%= hidden_field_tag "new_effort", (@staffing_custom_data.global_effort_value.blank? ? effort : @staffing_custom_data.global_effort_value), class: "new_effort" %> <%#= hidden_field_tag "new_effort", effort, class: "new_effort" %>
      <%= hidden_field_tag "new_duration", (@staffing_custom_data.duration.nil? ? @md_duration.round(user_number_precision).to_f : @staffing_custom_data.duration.round(user_number_precision).to_f), class: "new_duration" %>
      <%= hidden_field_tag "new_staffing_rayleigh", @staffing_custom_data.max_staffing.to_f.round(user_number_precision), class: "new_staffing_rayleigh" %>
      <%= hidden_field_tag "new_staffing_trapeze", @staffing_custom_data.max_staffing_rayleigh.to_f.round(user_number_precision), class: "new_staffing_trapeze" %>
    <% rescue %>
        <span>
          Mettez à jour le module.
        </span>
    <% end %>
  </div>


  <% begin %>
    <script>

      var staffing_trapeze = $("#new_staffing_trapeze").val();
      var staffing_rayleigh = $("#new_staffing_rayleigh").val();

      if (staffing_trapeze == "0.0" || staffing_rayleigh == "0.0"){
          var data_staff_from = { from: 100 };
          set_staffing_values(data_staff_from);
      }

      $('#percent').ionRangeSlider({
        min: 70,
        max: 150,
        from: <%= @staffing_custom_data.percent.nil? ? 100 : @staffing_custom_data.percent %>,
        grid: true,
        postfix: "%",

        onChange: function (data) {
            set_staffing_values(data);
        }

      });

      function sign(value){
        if (value > 0) {
          return "+" + value;
        } else {
          return value;
        }
      }

      // Get The Max-Staff value according to selected value from the Slider
      function set_staffing_values(data) {

          var effort = $(".reference_effort").html();
          var duration = $(".reference_duration").html();
          var staffing_trapeze = $(".reference_staffing_trapeze").html();
          var staffing_rayleigh = $(".reference_staffing_rayleigh").html();

          $("#standard_effort").val(parseFloat(effort));

          var new_effort = (parseFloat(effort) / (parseFloat(data.from)) * 100);
          $(".effort").html(new_effort.toFixed(2) + " <%= @staffing_model.effort_unit %>");
          $(".new_effort").val(new_effort.toFixed(2));

          var new_duration = (duration * (parseFloat(data.from)) / 100);
          $(".duration").html(new_duration.toFixed(2) + " sem.");
          $(".new_duration").val(new_duration.toFixed(2));

          x0 = <%= @staffing_model.trapeze_default_values[:x0].to_f / 100 %>
          x1 = <%= @staffing_model.trapeze_default_values[:x1].to_f / 100 %>
          x2 = <%= @staffing_model.trapeze_default_values[:x2].to_f / 100 %>
          x3 = <%= @staffing_model.trapeze_default_values[:x3].to_f / 100 %>
          y0 = <%= @staffing_model.trapeze_default_values[:y0].to_f / 100 %>
          y3 = <%= @staffing_model.trapeze_default_values[:y3].to_f / 100 %>

          var new_staffing_trapeze = (2 * (new_effort * <%= @staffing_model.standard_unit_coefficient.to_f / effort_week_unit %>) / new_duration) * ( 1 / (x3 + x2 - x1 - x0 + y0*(x1 - x2) + y3*(x3 - x2)));

          $(".staffing_trapeze").html(new_staffing_trapeze.toFixed(2) + " pers.");
          $(".new_staffing_trapeze").val(new_staffing_trapeze.toFixed(2));


          var form_coef = -Math.log(1-0.97) / (new_duration * new_duration);
          var t_max_staffing = Math.sqrt(1/(2*form_coef));
          var new_staffing_rayleigh = 1 * (new_effort * <%= @staffing_model.standard_unit_coefficient.to_f / effort_week_unit %>) / (t_max_staffing * Math.sqrt(Math.exp(1))) / 2
          $(".staffing_rayleigh").html(new_staffing_rayleigh.toFixed(2) + " pers.");
          $(".new_staffing_rayleigh").val(new_staffing_rayleigh.toFixed(2) + " pers.");

          $(".percent_effort").html(sign((((new_effort-effort)/new_effort)*100).toFixed(1)) + " %");
          $(".percent_duration").html(sign((((new_duration-duration)/duration)*100).toFixed(1)) + " %");
          $(".percent_trapeze").html(sign((((new_staffing_trapeze-staffing_trapeze)/staffing_trapeze)*100).toFixed(1)) + " %");
          $(".percent_rayleigh").html(sign((((new_staffing_rayleigh-staffing_rayleigh)/staffing_rayleigh)*100).toFixed(1)) + " %");

          $(".gap_effort").html(sign((new_effort-effort).toFixed(2)) + " <%= @staffing_model.effort_unit %>");
          $(".gap_duration").html(sign((new_duration-duration).toFixed(2)) + " sem.");
          $(".gap_trapeze").html(sign((new_staffing_trapeze-staffing_trapeze).toFixed(2)) + " pers.");
          $(".gap_rayleigh").html(sign((new_staffing_rayleigh-staffing_rayleigh).toFixed(2)) + " pers.");

          var date = new Date(<%= @project.start_date.year %>, <%= @project.start_date.month %>, <%= @project.start_date.day %>);
          date.setDate(date.getDate() + (new_duration * 7));

          var dd = date.getDate();
          var mm = date.getMonth();
          var y = date.getFullYear();

          var someFormattedDate = dd + '/' + mm + '/' + y;
          $(".end_date").html(someFormattedDate);
      }


    </script>


  <% rescue Exception => e %>
    <%= e %>
  <% end %>
  </div>

<% end %>

<script>

  refresh_chart();

  function refresh_chart() {
    $('#staffing_trapeze_chart').highcharts({
      title: {
        text: '<%= I18n.t("Répartition des ressources en fonction du temps") %>'
      },
      xAxis: {
        min: 0,
        title: {
          text: '<%= I18n.t("Evolution du temps") %>'
        }
      },
      yAxis: {
        min: 0,
        title: {
          text: '<%= I18n.t(:staffing) %>'
        }
      },
      plotOptions: {
        column: {
          pointPadding: 0,
          borderWidth: 0
        },
        line: {
          marker: {
            enabled: false
          }
        }
      },
      series: [{
        name: "Répartition en Trapèze Optimal",
        type: 'column',
        color: '#AC6A35',
        data: <%= @staffing_custom_data.chart_actual_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>
      },{
        name: "Répartition en Trapèze Ajusté",
        type: 'column',
        color: '#AA3538',
        data: <%= @staffing_custom_data.trapeze_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>
      },{
        type: 'spline',
        name: "Répartition Rayleigh Ajusté",
        data: <%= @staffing_custom_data.rayleigh_chart_theoretical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#2F3EAF',
        marker: {
          enabled: false
        }
      },{
        type: 'spline',
        name: "Répartition Rayleigh Optimal",
        data: <%= @staffing_custom_data.mcdonnell_chart_theorical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
        color: '#2077A1',
        marker: {
          enabled: false
        }
      }]
//        {
//        name: '<%#= I18n.t("Répartition en trapèze personnalisé") %>',
//        type: 'column',
//        data: <%# @staffing_custom_data.chart_actual_coordinates.map{|i| i.last.round(1)} %>,
//        color: '#7CB9E8'
//      },
//      },{
//        type: 'spline',
//        name: '<%#= I18n.t("Répartition optimal") %>',
//        data: <%#= @staffing_custom_data.mcdonnell_chart_theorical_coordinates.map{|i| i.last.nil? ? 0 : i.last.round(1)} %>,
//        color: '#000000',
//        marker: {
//          enabled: false
//        }
//      }]
    });
  }

</script>