<h4>
  <strong>
    <%= link_to @guw_model, guw.edit_guw_model_path(@guw_model, organization_id: @organization.id) %>
  </strong>
  <% if can? :manage_modules_instances, ModuleProject %>
    <%= link_to I18n.t(:new_uw_type), guw.new_guw_model_guw_type_path(@guw_model), :class => 'btn btn-mini pull-right button_margin_right'%>
  <% end %>
  <%= link_to "Afficher sous forme d'un tableau", guw.guw_model_all_guw_types_path(@guw_model), class: "btn btn-mini pull-right button_margin_right" %>
</h4>

<div class="tabs">
  <ul>
    <% if @guw_model.guw_types.empty? %>
      <li>
        <a href="#tabs-default">
          <%= @guw_model %>
        </a>
      </li>
    <% else %>
      <% @guw_model.guw_types.each do |guw_type| %>
        <li>
          <a href="#tabs-<%= guw_type.name.gsub(" ", "-") %>">
            <%= guw_type %>
          </a>
        </li>
      <% end %>
    <% end %>
  </ul>

  <% if @guw_model.guw_types.empty? %>
    <div id="tabs-default">
      <p>
        <%= I18n.t :no_uo_type %>
      </p>
    </div>
  <% else %>
    <% @guw_model.guw_types.each do |guw_type| %>

      <div id="tabs-<%= guw_type.name.gsub(" ", "-") %>">

        <%= link_to "#{I18n.t(:edit)} #{guw_type}", guw.edit_guw_model_guw_type_path(@guw_model, guw_type), class: "btn btn-mini pull-right" %>
        <% if can? :manage_modules_instances, ModuleProject %>
          <%= link_to I18n.t(:new_type_thresold), new_guw_model_guw_type_guw_complexity_path(@guw_model, guw_type), class: "btn btn-mini pull-right button_margin_right" %>
        <% end %>

        <%= simple_format(guw_type.description) %>

        <h4>
          <b>
             <%= I18n.t(:UO_type_complexity_of, parameter: guw_type) %>
          </b>

        </h4>

        <%= form_tag guw_complexity_work_units_save_complexity_work_units_path do %>
          <%= hidden_field_tag :guw_type_id, guw_type.id %>
          <table class="table table-bordered table-condensed">
            <tr>
              <th></th>
              <% guw_type.guw_complexities.order("display_order asc").each do |guw_cplx| %>
                <th colspan="<%= Guw::GuwOutput.where(guw_model_id: @guw_model.id).size %>">
                  <%= guw_cplx.name %> <%= guw_cplx.default_value == true ? '(par défault)' : '' %> -
                  <%= link_to I18n.t(:edit), guw.edit_guw_model_guw_type_guw_complexity_path(@guw_model, guw_type, guw_cplx) %>
                  <% if can? :manage_modules_instances, ModuleProject %>
                      - <%= link_to I18n.t(:delete), guw_cplx, method: :delete, confirm: I18n.t(:are_you_sure) %>
                  <% end %>
                </th>
              <% end %>
            </tr>

            <tr>
              <th></th>
              <% guw_type.guw_complexities.order("display_order asc").each do |guw_cplx| %>
                <th colspan="<%= guw_type.allow_criteria == true ? "#{Guw::GuwOutput.where(guw_model_id: @guw_model.id).size}" : "#{Guw::GuwOutput.where(guw_model_id: @guw_model.id).size}" %>" >

                  <% if guw_type.allow_criteria == true %>
                    Calcul. &nbsp;
                  <% end %>
                  <% if guw_type.allow_criteria == true %>
                    [ &nbsp; ; &nbsp; [ &nbsp; / &nbsp; <%= I18n.t :weight %>
                  <% else %>
                    <%= I18n.t :weight %> - Ordonnée à l'origine
                  <% end %>
                </th>
              <% end %>
            </tr>

            <tr>
              <th></th>
              <% guw_type.guw_complexities.order("display_order asc").each do |guw_complexity| %>
                <% @guw_model.guw_outputs.each do |guw_output| %>
                  <th>
                    <%= guw_output.name %>
                  </th>
                <% end %>
              <% end %>
            </tr>
            <% @guw_model.guw_outputs.each do |aguw_output| %>
              <tr>
                <td>
                  <%= aguw_output.name %>
                </td>
                <% guw_type.guw_complexities.order("display_order asc").each do |guw_complexity| %>
                  <% @guw_model.guw_outputs.each do |guw_output| %>

                    <% oa = Guw::GuwOutputAssociation.where( guw_complexity_id: guw_complexity.id,
                                                             guw_output_associated_id: aguw_output.id,
                                                             guw_output_id: guw_output.id).first %>
                    <td class="align-center">
                      <%= text_field_tag "config[#{guw_complexity.id}][#{guw_output.id}][#{aguw_output.id}]", oa.nil? ? '' : oa.value, class: "input-mini" %>
                    </td>
                  <% end %>
                <% end %>
              </tr>
            <% end %>

            <tr>
              <th>Seuils</th>
              <% guw_type.guw_complexities.order("display_order asc").each do |guw_cplx| %>
                <th class="align-center" colspan="<%= guw_type.allow_criteria == true ? "#{Guw::GuwOutput.where(guw_model_id: @guw_model.id).size}" : "#{Guw::GuwOutput.where(guw_model_id: @guw_model.id).size}" %>">
                  <% if guw_type.allow_criteria == true %>
                    <%= check_box_tag "enable_value[#{guw_type.id}][#{guw_cplx.id}]", "enable", guw_cplx.enable_value, class: "input-xmini" %> &nbsp;
                  <% end %>
                  <% if guw_type.allow_criteria == true %>
                    [ <%= guw_cplx.bottom_range %> ; <%= guw_cplx.top_range %> [ ;
                  <% end %>
                  <%= guw_cplx.weight %> - <%= guw_cplx.weight_b.nil? ? 0 : guw_cplx.weight_b %>
                </th>
              <% end %>
            </tr>

            <% @guw_model.guw_coefficients.each do |guw_coefficient| %>
              <tr>
                <th>
                  <b class="pull-left">
                    <%= link_to guw_coefficient.name, "#" %>
                  </b>
                </th>
                <% guw_type.guw_complexities.each do |gc| %>
                  <% Guw::GuwOutput.where(guw_model_id: @guw_model.id).each do |guw_output| %>
                    <th>
                      <%= guw_output.name %>
                    </th>
                  <% end %>
                <% end %>

                <% guw_coefficient.guw_coefficient_elements.each do |guw_coefficient_element| %>
                  <tr>
                    <td>
                      <%= guw_coefficient_element.name %> (<%= guw_coefficient_element.value %>)
                    </td>
                    <% guw_type.guw_complexities.order("display_order asc").each do |guw_cplx| %>

                        <% Guw::GuwOutput.where(guw_model_id: @guw_model.id).each do |guw_output| %>

                          <% cf = Guw::GuwComplexityCoefficientElement.where(guw_complexity_id: guw_cplx.id,
                                                                             guw_coefficient_element_id: guw_coefficient_element.id,
                                                                             guw_output_id: guw_output.id).first %>
                          <td class="align-center">
                            <%= text_field_tag "coefficient_elements_value[#{guw_cplx.id}][#{guw_coefficient_element.id}][#{guw_output.id}]", cf.nil? ? nil : cf.value, class: "input-mini" %>
                          </td>
                        <% end %>
                    <% end %>
                  </tr>

                <% end %>
                </td>
              </tr>
            <% end %>

            <% if @guw_model.allow_technology == true %>
              <tr>
                <th colspan="<%= guw_type.guw_complexities.size * 2 + 1 %>">
                  <b class="pull-left">
                    <%= I18n.t :technology %>
                  </b>
                </th>
              </tr>
            <% end %>

            <% if @guw_model.allow_technology == true %>
              <% @guw_model.organization.organization_technologies.each do |technology| %>
                <tr>
                  <td>
                    <%= technology.name %>
                  </td>

                  <% guw_type.guw_complexities.order("display_order asc").each do |guw_cplx| %>
                    <% tcplx = Guw::GuwComplexityTechnology.where(guw_complexity_id: guw_cplx.id,
                                                                  organization_technology_id: technology.id).first %>
                    <td colspan="<%= Guw::GuwOutput.where(guw_model_id: @guw_model.id).size %>" class="align-center">
                      <%= text_field_tag "technology_value[#{guw_cplx.id}][#{technology.id}]", tcplx.nil? ? '' : tcplx.coefficient, class: "input-mini" %>
                    </td>
                  <% end %>
                  </td>
                </tr>
              <% end %>
            <% end %>

          </table>

          <% if can? :manage_modules_instances, ModuleProject %>
            <%= submit_tag I18n.t(:label_save), class: "btn btn-mini pull-right" %>
          <% end %>
        <% end %>

        <br>
        <hr>

        <% if guw_type.allow_criteria == true %>

          <h4>
            <b><%= I18n.t :label_complexity_attributes %> <%= guw_type %> </b>
            <% if can? :manage_modules_instances, ModuleProject %>
              <%= link_to I18n.t(:new_attribute_thresold), guw.new_guw_model_guw_type_guw_type_complexity_path(@guw_model, guw_type), class: "btn btn-mini pull-right" %>
            <% end %>
          </h4>

          <%= form_tag guw_model_guw_type_guw_attribute_complexities_save_attributs_complexities_path(@guw_model, guw_type.id), method: "POST" do %>
            <table class="table table-bordered">
              <tr>
                <th>
                  Seuils de complexité
                </th>
                <% guw_type.guw_type_complexities.order("display_order asc").each do |type_complexity| %>
                  <th colspan="5">
                    <%= type_complexity.name %> (<%= type_complexity.value %>) -
                    <%= link_to I18n.t(:edit), guw.edit_guw_model_guw_type_guw_type_complexity_path(@guw_model, guw_type, type_complexity) %>
                    <% if can? :manage_modules_instances, ModuleProject %>
                      <%= link_to "  - #{I18n.t(:delete)}", type_complexity, method: :delete, confirm: I18n.t(:are_you_sure) %>
                    <% end %>
                  </th>
                <% end %>
              </tr>

              <tr>
                <th>Attributs</th>
                <th colspan="<%= (guw_type.guw_type_complexities.size) * 5 %>"></th>
              </tr>

              <tr>
                <th></th>
                <% guw_type.guw_type_complexities.order("display_order ASC").each do |type_complexity| %>
                  <th>ax + b</th>
                  <th>Min [</th>
                  <th>Max [</th>
                  <th>a</th>
                  <th>b</th>
                <% end %>
              </tr>

              <% @guw_model.guw_attributes.order("name ASC").each do |guw_attribute| %>
                <tr>
                  <td class="align-center">
                    <%# link_to guw_attribute, guw.edit_guw_model_guw_attribute_path(@guw_model, guw_attribute) %>
                    <% gat = Guw::GuwAttributeType.where(guw_type_id: guw_type.id,
                                                         guw_attribute_id: guw_attribute.id).first %>
                    <%= link_to "#{guw_attribute} (#{gat.default_value})", guw.edit_guw_model_guw_type_guw_attribute_type_path(@guw_model, guw_type, gat) %>
                  </td>
                  <% guw_type.guw_type_complexities.order("display_order ASC").each do |type_complexity| %>

                    <% ac = Guw::GuwAttributeComplexity.where(guw_attribute_id: guw_attribute.id, guw_type_id: guw_type, guw_type_complexity_id: type_complexity.id).first %>

                    <td class="align-center">
                      <%= check_box_tag "enable[#{guw_attribute.id}][#{type_complexity.id}]", "enable", ac.nil? ? false : ac.enable_value, class: "input-mini" %>
                    </td>
                    <td class="align-center">
                      <%= text_field_tag "bottom[#{guw_attribute.id}][#{type_complexity.id}]", ac.nil? ? '' : ac.bottom_range, class: "input-mini" %>
                    </td>
                    <td class="align-center">
                      <%= text_field_tag "top[#{guw_attribute.id}][#{type_complexity.id}]", ac.nil? ? '' : ac.top_range, class: "input-mini" %>
                    </td>
                    <td class="align-center">
                      <%= text_field_tag "coefficient[#{guw_attribute.id}][#{type_complexity.id}]", ac.nil? ? '' : ac.value, class: "input-mini" %>
                    </td>
                    <td class="align-center">
                      <%= text_field_tag "value_b[#{guw_attribute.id}][#{type_complexity.id}]", ac.nil? ? '' : ac.value_b, class: "input-mini" %>
                    </td>
                  <% end %>
                </tr>
              <% end %>
            </table>

            <% unless @guw_model.guw_attributes.empty? %>
              <% if can? :manage_modules_instances, ModuleProject %>
                <%= submit_tag I18n.t(:save), class: "btn btn-mini pull-right" %>
              <% end %>
              <%= link_to I18n.t(:back), main_app.edit_organization_path(@guw_model.organization), :class => 'btn btn-mini pull-right button_margin_right' %>
            <% end %>

            <br>
          <% end %>
        <% end %>
      </div>
    <% end %>
  <% end %>
</div>