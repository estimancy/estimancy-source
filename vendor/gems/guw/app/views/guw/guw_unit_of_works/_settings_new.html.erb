<%= form_tag guw.guw_unit_of_works_save_guw_unit_of_works_with_multiple_outputs_path, id: "guw_form", remote: true do %>

  <%= hidden_field_tag 'module_project_id', @module_project.id %>

  <div class="modal fade" id="modal_deported" tabindex="-1" role="dialog" aria-labelledby="modal_deported_label" aria-hidden="true" backdrop="static">
    <div class="modal-dialog">
      <div class="modal-deported" id="modal_deported_content">
      </div>
    </div>
  </div>

  <% @current_mp = current_module_project %>

  <!-- Vue  ModuleProjectGuwUnitOfWorkGroup -->
  <% current_mp = @module_project %>
  <% current_psb =  current_component %>
  <% organization_id = @guw_model.organization_id %>
  <% project_id = @project.id %>

  <% @group_unit_of_works = Guw::GuwUnitOfWorkGroup.includes(:guw_unit_of_works).where(organization_id: organization_id,
                                                                                       project_id: project_id,
                                                                                       module_project_id: current_mp.id).order("created_at ASC") %>

  <%# @group_unit_of_works = ModuleProjectGuwUnitOfWorkGroup.where(organization_id: @guw_model.organization_id,
                                                                  project_id: project_id,
                                                                  module_project_id: current_module_project.id,
                                                                  pbs_project_element_id: current_psb.id) %>
  <% @guw_coefficients = Guw::GuwCoefficient.includes(:guw_coefficient_elements).where(organization_id: organization_id, guw_model_id: @guw_model.id) %>

  <% @current_module_project_guw_unit_of_works = current_module_project.guw_unit_of_works %>
  <% @current_module_project_guw_unit_of_work_groups = current_module_project.guw_unit_of_work_groups %>
  <% @guw_model_guw_coefficients = @guw_model.guw_coefficients %>
  <% @deported_guw_model_guw_coefficients = @guw_model.guw_coefficients.where(deported: true) %>
  <% @deported_guw_coefficients = @guw_coefficients.where(guw_model_id: @guw_model.id, deported: true) %>
  <% @guw_outputs = @guw_model.guw_outputs.where(organization_id: organization_id) %>


  <% @hash_guw_coefficients = {} %>
  <% Guw::GuwCoefficient.where(guw_model_id: @guw_model.id,
                               name: @guw_model.orders.map(&:first)).each do |guw_coef| %>
    <% @hash_guw_coefficients[guw_coef.name] = guw_coef %>
  <% end %>

  <% @hash_guw_outputs = {} %>
  <% Guw::GuwOutput.where(guw_model_id: @guw_model.id,
                          name: @guw_model.orders.map(&:first)).each do |guw_output| %>
    <% @hash_guw_outputs[guw_output.name] = guw_output %>
  <% end %>

  <% @hash_guw_output_types = {} %>
  <% Guw::GuwOutputType.where(organization_id: organization_id, guw_model_id: @guw_model.id).each do |guw_output_type| %>
    <% @hash_guw_output_types["#{guw_output_type.guw_type_id}_#{guw_output_type.guw_output_id}"] = guw_output_type %>
  <% end %>

  <% @guow_guw_coefficient_element_unit_of_works = Hash.new {|h,k| h[k] = [] } %>
  <% Guw::GuwCoefficientElementUnitOfWork.where(organization_id: organization_id,
                                                guw_model_id: @guw_model.id,
                                                project_id: project_id,
                                                module_project_id: current_mp.id).each do |gceuw| %>
    <% @guow_guw_coefficient_element_unit_of_works[gceuw.guw_unit_of_work_id] << gceuw %>
  <% end %>

  <% @guow_guw_coefficient_element_unit_of_works_with_coefficients = {} %>
  <% Guw::GuwCoefficientElementUnitOfWork.where(organization_id: organization_id,
                                                guw_model_id: @guw_model.id,
                                                project_id: project_id,
                                                module_project_id: current_mp.id).order("updated_at ASC").each do |gceuw| %>
    <% @guow_guw_coefficient_element_unit_of_works_with_coefficients["#{gceuw.guw_unit_of_work_id}_#{gceuw.guw_coefficient_id}"] = gceuw %>
  <% end %>

  <% @hash_guw_coefficients = {} %>
  <% Guw::GuwCoefficient.where(guw_model_id: @guw_model.id,
                               name: @guw_model.orders.map(&:first),
                               deported: false).each do |guw_coef| %>
    <% @hash_guw_coefficients[guw_coef.name] = guw_coef %>
  <% end %>

  <div class="row">
    <div class="col-12 tools">

      <% if current_module_project.nexts.map{|i| i.pemodule.alias }.include?("effort_breakdown") %>
        <%= link_to raw("<i class='material-icons'>unarchive</i>"), guw.guw_model_export_with_wbs_path(@guw_model), method: "post", class: "float-right", title: "Export with WBS" %>
      <% end %>

      <% if @guw_model.view_data == true %>
        <%= link_to image_tag("/assets/twotone-data-24px.svg", size: "24x24"), guw.guw_model_show_data_model_path(@guw_model, component_id: current_component.id, module_project_id: current_module_project.id), method: "get", target: :_blank, class: "float-right", title: I18n.t(:data_model) %>
      <% end %>

      <% if can? :execute_estimation_plan, @project %>
        <%= link_to raw("<i class='material-icons'>restore_page</i>"), "#!", onclick: "multiraz()", class: "float-right", title: "#{I18n.t :restore}" %>
      <% end %>

      <% if can? :execute_estimation_plan, @project %>
        <%= link_to raw("<i class='material-icons'>queue</i>"), guw.guw_model_guw_unit_of_work_groups_path(@guw_model), class: "float-right", title: "#{I18n.t :group}" %>
      <% end %>

      <span class="float-right">
        &nbsp;
        &nbsp;
      </span>

      <%# if current_module_project.nexts.map{|i| i.pemodule.alias }.include?("effort_breakdown") %>
        <%# link_to image_tag("/assets/baseline-save2_alt-24px.svg", size: "24x24"), guw.guw_model_export_path(@guw_model), method: "post", class: "float-right", title: I18n.t(:export) %>
      <%# else %>
        <%= link_to image_tag("/assets/baseline-save2_alt-24px.svg", size: "24x24"), guw.guw_model_export_path(@guw_model), method: "post", class: "float-right", title: I18n.t(:export) %>
      <%# end %>

      <% if can? :execute_estimation_plan, @project %>
        <% unless @guw_model.allow_excel == false && @guw_model.allow_jira == false && @guw_model.allow_redmine == false && @guw_model.allow_ml == false %>
          <%= link_to raw("<i class='material-icons'>save_alt</i>"), "#!", "data-toggle": "modal", "data-target": "#extract", class: "float-right", title: I18n.t(:import) %>
        <% end %>
      <% end %>

    </div>
  </div>

  <section class="estimation-modules-edition">

    <div class="edition-page-module pt-3 pl-3 d-flex justify-content-between">
       <span class="no_uppercase"><%= @module_project %></span>
      <div class="edition-bloc-tools">
        <a href="<%= guw.new_guw_unit_of_work_group_path %>"><i class="material-icons">add</i><%= I18n.t("add_a_group") %></a>
        <%= submit_tag I18n.t(:recalculate_all), data: { :"disable-with" => "#{ I18n.t :please_wait }" }, class: "btn btn-secondary" %>
      </div>
    </div>

    <% @group_unit_of_works.each_with_index do |uowg, j| %>

    <% @uowg_guw_unit_of_works = uowg.guw_unit_of_works.order("created_at ASC") %>

    <% @guw_types = @guw_model.guw_types.includes(:guw_complexities) %>

    <div class="card card-widget">
      <div class="card-body">
        <div class="edition-bloc-content pb-4">
          <div class="guw-list">

            <a href="<%= guw.edit_guw_model_guw_unit_of_work_group_path(@guw_model, uowg) %>" class="edition-bloc-title-link" style="font-size: 20px;">
              <strong>
                <%= uowg %>
              </strong>
            </a>
            <br>

            <table class="table table-sm requirements-table estimation-table group_<%= uowg.id %>" id="guw">
              <tr>
                <th colspan="2"><%= I18n.t :name %></th>
                <th><%= I18n.t(:component) %></th>

                <% @guw_model.orders.sort_by { |k, v| v.to_f }.each do |i| %>
                  <% unless i[1].blank? %>
                    <% if @hash_guw_coefficients[i[0]].class == Guw::GuwCoefficient %>
                      <% guw_coefficient = @hash_guw_coefficients[i[0]] %>
                      <% unless guw_coefficient.nil? %>
                        <th style="width: 11%;">
                          <%= i[0] %>
                        </th>
                      <% end %>
                    <% elsif i[0] == I18n.t(:coefficient) %>
                      <% unless @deported_guw_model_guw_coefficients.map(&:id).empty? %>
                        <th>
                          <%= i[0] %>
                        </th>
                      <% end %>
                    <% elsif i[0] == I18n.t(:criteria) %>
                      <% if @guw_types.map{ |i| i.allow_criteria }.flatten.include?(true) %>
                        <th>
                          <%= I18n.t :criteria %>
                        </th>
                      <% end %>
                    <% elsif i[0] == I18n.t(:cplx_coeff) %>
                      <% if i[1].blank? %>
                      <% else %>
                        <th>
                          <% if @guw_types.map{|i| i.allow_criteria }.flatten.include?(true) %>
                            <%= I18n.t(:cplx_coeff) %>
                          <% else %>
                            <%= I18n.t(:complexity) %>
                          <% end %>
                        </th>
                      <% end %>
                    <% elsif @hash_guw_coefficients[i[0]].class == Guw::GuwOutput %>
                      <% guw_output = @hash_guw_coefficients[i[0]] %>
                      <% unless guw_output.estimation_status_id.nil? %>
                        <% if guw_output.estimation_status_id == @project.estimation_status_id %>
                          <%= i[0] %>
                        <% end %>
                      <% else %>
                        <%= i[0] %>
                      <% end %>
                    <% else %>
                      <th style="width: 12%;">
                        <%= i[0] %>
                      </th>
                    <% end %>
                  <% end %>
                <% end %>

                <th class=""><%= I18n.t :actions %></th>
              </tr>

              <% @hash_guw_complexities = {} %>
              <% Guw::GuwComplexity.where(organization_id: organization_id, guw_model_id: @guw_model.id).all.each do |guw_complexity| %>
                  <% @hash_guw_complexities[guw_complexity.guw_type_id] = guw_complexity %>
              <% end %>

              <% @hash_guw_model_guw_complexities = Hash.new {|h,k| h[k] = [] } %>
              <% @guw_model.guw_types.each do |guw_type| %>
                <% guw_complexity = @hash_guw_complexities[guw_type.id] %>
                <% unless guw_complexity.nil? %>
                  <% @hash_guw_model_guw_complexities[guw_complexity.guw_type_id] << guw_complexity %>
                <% end %>
              <% end %>

              <%# @uowg_guw_unit_of_works.includes(:guw_type, :guw_complexity, :guw_unit_of_work_attributes).each_with_index do |guow, i| %>
              <% @uowg_guw_unit_of_works.includes(:guw_type, :guw_complexity).each_with_index do |guow, i| %>
                <% @guw_type = guow.guw_type %>
                <% unless @guw_type.nil? %>
                  <% @guw_complexities = @hash_guw_model_guw_complexities[@guw_type.id] %>
                <% end %>

                <% unless guow.guw_unit_of_work_id.nil? %>
                  <% color = "#d3d3d34d;" %>
                <% end %>
                <tr style="background-color: <%= color %>" id="<%= guow.id %>" data-guw-id="<%= guow.id %>">

                  <%
                    @guw_coefficient_guw_coefficient_elements = Hash.new {|h,k| h[k] = [] }
                    @guw_model.guw_coefficient_elements.each do |guw_coefficient_element|
                      @guw_coefficient_guw_coefficient_elements[guw_coefficient_element.guw_coefficient_id] << guw_coefficient_element
                    end
                  %>
                  <%= render partial: "guw/guw_unit_of_works/guw_tr", locals: {"guow" => guow, "uowg" => uowg} %>
                </tr>
              <% end %>

              <tr style="height: 0px;">
<!--                <td colspan="3">-->
<!--                  <b>-->
<!--                    Sous total-->
<!--                  </b>-->
<!--                </td>-->
                <% @guw_model.orders.sort_by { |k, v| v.to_f }.each do |i| %>
                  <% unless i[1].blank? %>
                    <% go = @hash_guw_outputs[i[0]] %>
                    <% if go.class == Guw::GuwOutput %>
<!--                      <td>-->
<!--                        <strong class="center" id="total_<%#= uowg.id %>_<%#= go.id %>" style="padding-left: 50%;"></strong>-->
<!--                      </td>-->
                    <% else %>
<!--                      <td></td>-->
                    <% end %>
                  <% end %>
                <% end %>
<!--                <td></td>-->
              </tr>

            </table>
          </div>

          <div class="float-right">
            <% if can? :execute_estimation_plan, @project %>
                <% unless @unit_of_work_groups.empty? %>
                <button type="button" class="btn btn-primary new_guw_button" data-toggle="modal" data-target="#new_guw" data-group-id="<%= uowg.id %>">
                  <%= I18n.t('new_unit_of_work') %>
                </button>
              <% end %>
              <button type="submit" class="btn btn-secondary guw_submit" data-disable-with="<%= I18n.t :please_wait %> <i class='fa fa-spinner fa-spin'></i>"><%= I18n.t(:calculate) %></button>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <br>

  <% end %>
  </section>
  <% if params[:recalculate] == "true" %>
    <%= hidden_field_tag "modified_guw_line_ids", @current_module_project_guw_unit_of_works.map(&:id).flatten.join(",") %>
  <% else %>
    <%= hidden_field_tag "modified_guw_line_ids", nil %>
  <% end %>

  <script>
    var my_array = [];
    //$(document).ready(function(){
    $(document).ready(function() {
        $(".new_guw_button").on('click', function(e){
            $("select#guw_unit_of_work_group_id").val($(this).data("group-id"));
            $("#hidden_position").val($(this).data("display-order"));
        });

        $("table#guw input").keyup(function(e) {
            var new_line = $(this).closest("tr").data("guw-id");
            my_array.push(new_line);
            $("#modified_guw_line_ids").val(my_array);
        });

        $("table#guw select").on("change", function(e) {
            var new_line = $(this).closest("tr").data("guw-id");
            my_array.push(new_line);
            $("#modified_guw_line_ids").val(my_array);
        });

        $(".selected").on("change", function(e) {
            var new_line = $(this).closest("tr").data("guw-id");
            my_array.push(new_line);
            $("#modified_guw_line_ids").val(my_array);
        });
    });
  </script>

<% end %>


<div id="import_guw" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <%= form_tag guw.import_guw_path, :method => 'post', :multipart => true, :class => 'simple_form' do %>
    <div class="modal-header modal-drag">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
      <h3 id="myModalLabel"> <%= I18n.t(:import_data_from_uw) %></h3>
    </div>
    <div class="modal-body">
      <%= file_field_tag :file %>

      <div class="loading span11 hide">
        <h4>
          <%= I18n.t(:please_wait_import) %>
          <%= image_tag 'ajax-loader.gif' %>
        </h4>
      </div>
    </div>
    <div class="modal-footer">
      <button class="btn" data-dismiss="modal" aria-hidden="true">Fermer</button>
      <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
    </div>
  <% end %>
</div>

<style>
  td {
    vertical-align: middle;
  }
</style>

<script>
    function raz(group){
        $('.retained-gp-' + group).val('');
        return false; // prevent default click action from happening!
        e.preventDefault();
    }

    function raz_line(uo){
        $('.retained-guw-' + uo).val('');
        return false; // prevent default click action from happening!
        e.preventDefault();
    }

    function multiraz(uo){
        $('.retained').val('');
        return false; // prevent default click action from happening!
        e.preventDefault();
    }

    function reset(uo){
        $('.guw-' + uo).val('');
        return false; // prevent default click action from happening!
        e.preventDefault();
    }

    function toggle_group(group_id){
        var number_of_checked = 0;
        var number_of_line = 0;

        $(".checkbox_" + group_id).each(function() {
            if (this.checked)
                number_of_checked = number_of_checked + 1;
            number_of_line = number_of_line + 1
        });
        if (number_of_checked < number_of_line){
            $(".checkbox_" + group_id).attr("checked", true);
        }
        else if (number_of_checked == number_of_line){
            $(".checkbox_" + group_id).attr("checked", false);
        }
    }

    //$(document).ready(function () {
    $(document).ready(function() {

        $('.guw_type').change(function(){
            reset($(this).attr("guw"));

            $.ajax({
                url: "<%= guw.change_cotation_path %>",
                data: {
                    guw_type_id: this.value,
                    guw_unit_of_work_id: $(this).attr("guw")
                }
            });
        });


    });
</script>

<div class="modal hide fade" id="modal_cotation" tabindex="-1" role="dialog" aria-labelledby="modal_cotation_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-cotation modal-content" id="modal_cotation_content">
    </div>
  </div>
</div>

<div class="modal hide fade" id="modal_comments" tabindex="-1" role="dialog" aria-labelledby="modal_comments_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-content" id="modal_comments_content">
    </div>
  </div>
</div>

<div class="modal hide fade" id="coefficient_comments" tabindex="-1" role="dialog" aria-labelledby="modal_coefficient_comments_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-content" id="modal_coefficient_comments_content">

    </div>
  </div>
</div>

<div class="modal hide fade" id="cplx_comments" tabindex="-1" role="dialog" aria-labelledby="modal_cplx_comments_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-content" id="modal_cplx_comments_content">
    </div>
  </div>
</div>

<div class="modal hide fade" id="modal_trackings" tabindex="-1" role="dialog" aria-labelledby="modal_trackings_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-content" id="modal_trackings_content">
    </div>
  </div>
</div>

<div class="modal hide fade" id="modal_name" tabindex="-1" role="dialog" aria-labelledby="modal_name_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog modal-lg">
    <div class="modal-content" id="modal_name_content">
    </div>
  </div>
</div>

<!-- Word Trees modal : Modèle de données -->
<div class="modal hide fade" tabindex="-1" role="dialog" id="word_trees_modal" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header modal-drag">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title"><%= I18n.t(:data_model) %></h4>
      </div>
      <div class="modal-body">
        <% begin %>
          <%# raw render partial: "guw/guw_unit_of_works/g_word_trees" %>
        <% rescue %>
          <%= I18n.t(:data_model_display_error) %>
        <% end %>y
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><%= I18n.t(:close) %></button>
      </div>
    </div>
  </div>
</div>


<div class="modal hide fade" tabindex="-1" role="dialog" id="ml_trt" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <%= form_tag guw.ml_trt_path, :method => 'POST', :multipart => true, :class => 'simple_form', remote: true do %>

        <div class="modal-header modal-drag">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">
            <%= I18n.t(:treatments_import) %>
          </h4>
        </div>

        <div class="modal-body" style="height: inherit;">

          <%= hidden_field_tag "guw_model_id", @guw_model.id %>

          <h5>
            <%= I18n.t(:excel_file_import) %>
          </h5>
          <%= file_field_tag :file %>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal"><%= I18n.t(:close) %>
          </button>
          <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
        </div>

      <% end %>
    </div>
  </div>
</div>

<div class="modal hide fade" tabindex="-1" role="dialog" id="new_guw" aria-labelledby="new_guw_label">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <% @guw_unit_of_work = Guw::GuwUnitOfWork.new %>
      <%= form_tag guw.guw_model_guw_unit_of_works_path(@guw_model, @guw_unit_of_work), remote: true do |f| %>
        <div class="modal-header modal-drag">
          <h4 class="modal-title">
            <%= I18n.t(:component_serv_creation) %>
          </h4>
        </div>

        <div class="modal-body" style="height: inherit;">
          <%= hidden_field_tag :guw_model_id, @guw_model.id %>

          <div class="row-fluid">
            <div class="span12">
              <div class="form-inputs">

                <%= hidden_field_tag :organization_id, @current_organization.id %>
                <%= hidden_field_tag :project_id, @project.id %>
                <%= hidden_field_tag :module_project_id, current_module_project.id %>
                <%= hidden_field_tag :hidden_position, nil, class: "hidden_position" %>

                <%= I18n.t(:uw_name) %>
                <%= text_field_tag :name, "", class: "form-control uo_name" %>

                <%= I18n.t(:comments) %>
                <%= text_area_tag :comments, "", rows: "5", class: "form-control uo_comment" %>


                <%= I18n.t(:type) %>
                <% unless @guw_types.nil? %>
                  <%= select_tag :guw_type_id,
                                 options_for_select(@guw_types.map{|i| [i.name, i.id]}),
                                 include_blank: false,
                                 class: "form-control uo_type" %>
                <% end %>


                <%= I18n.t(:group) %>
                <%= select_tag :guw_unit_of_work_group_id,
                               options_for_select(@current_module_project_guw_unit_of_work_groups.map{|i| [i.name, i.id]}.to_a.sort),
                               class: "form-control input-xlarge" %>

              </div>
            </div>
          </div>
        </div>

        <div class="modal-footer modal-drag">
          <%= submit_tag I18n.t('close'), data: { :"dismiss" => "modal" }, class: "btn btn-secondary" %>
          <%= submit_tag I18n.t('save'), data: { :"disable-with" => "#{ I18n.t :please_wait }" }, class: "btn btn-primary" %>
        </div>
      <% end %>

    </div>
  </div>
</div>

<div class="modal hide fade" tabindex="-1" role="dialog" id="new_guw_group" aria-labelledby="new_guw_label">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <%= form_tag guw.create_group_path do %>
        <div class="modal-header modal-drag">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
          <h4 class="modal-title">
            <%= I18n.t (:add_new_unit_of_work_group) %>
          </h4>
        </div>
        <div class="modal-body" style="height: inherit;">
          <%= hidden_field_tag :guw_model_id, @guw_model.id %>
          <div class="row-fluid">
            <div class="span12">
              <div class="form-inputs">
                <%= hidden_field_tag :organization_id, @organization_id %>
                <%= hidden_field_tag :project_id, @project_id %>
                <p>
                <h5>
                  <%= I18n.t(:name) %>
                </h5>
                <%= text_field_tag :name, "", class: "input-xxlarge" %>
                </p>
                <p>
                <h5>
                  <%= I18n.t(:comments) %>
                </h5>
                <%= text_area_tag :comments, "", class: "input-xlarge" %>
                </p>

              </div>
            </div>
          </div>
        </div>
        <% if can? :execute_estimation_plan, @project %>
          <div class="modal-footer modal-drag">
            <div class="actions-tabs">
              <%= submit_tag I18n.t('save'), data: { :"disable-with" => "#{ I18n.t :please_wait }" }, class: "btn btn-primary" %>
            </div>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="modal hide fade" tabindex="-1" role="dialog" id="ml_data" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <%= form_tag guw.ml_data_path, :method => 'POST', :multipart => true, :class => 'simple_form', remote: true do %>

        <div class="modal-header modal-drag">
          <h4 class="modal-title">
            Importer les données
          </h4>
        </div>

        <div class="modal-body" style="height: inherit;">

          <%= hidden_field_tag "guw_model_id", @guw_model.id %>
          <%= I18n.t(:data_import) %>
          <label>
            <%= I18n.t(:excel_file_import) %>
          </label>
          <%= file_field_tag :file %>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal"><% I18n.t(:close) %></button>
          <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
        </div>

      <% end %>

    </div>
  </div>
</div>

<div class="modal hide fade" tabindex="-1" role="dialog" id="extract" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <%= form_tag guw.extract_from_url_path, :method => 'POST', :multipart => true, :class => 'simple_form' do %>

          <div class="modal-header modal-drag">
            <h4 class="modal-title">
              <%= I18n.t(:requirements_import) %>
            </h4>
          </div>

          <div class="modal-body" style="height: inherit;">
            <div class="row-fluid">
              <div class="span12">
                <div class="form-inputs">
                  <%= hidden_field_tag "guw_model_id", @guw_model.id %>

                  <label><%= I18n.t(:import_type) %></label>
                  <%= select_tag "import_type", options_for_select([I18n.t(:button_add), I18n.t(:replace)]), class: "form-control" %>

                  <label><%= I18n.t(:source_type) %></label>

                  <% if @guw_model.allow_excel == true && @guw_model.allow_jira == true && @guw_model.allow_redmine == true %>
                    <%= select_tag "from", options_for_select(["Excel", "Jira", "Redmine"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == true && @guw_model.allow_jira == true && @guw_model.allow_redmine == false %>
                    <%= select_tag "from", options_for_select(["Excel", "Jira"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == true && @guw_model.allow_jira == false && @guw_model.allow_redmine == true %>
                    <%= select_tag "from", options_for_select(["Excel", "Redmine"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == true && @guw_model.allow_jira == false && @guw_model.allow_redmine == false %>
                    <%= select_tag "from", options_for_select(["Excel"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == false && @guw_model.allow_jira == true && @guw_model.allow_redmine == true %>
                    <%= select_tag "from", options_for_select(["Jira","Redmine"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == false && @guw_model.allow_jira == true && @guw_model.allow_redmine == false %>
                    <%= select_tag "from", options_for_select(["Jira"]), prompt: "Source", class: "form-control" %>
                  <% elsif @guw_model.allow_excel == false && @guw_model.allow_jira == false && @guw_model.allow_redmine == true %>
                    <%= select_tag "from", options_for_select(["Redmine"]), prompt: "Source", class: "form-control" %>
                  <% else %>
                    <%= select_tag "from", options_for_select([""]), prompt: "Source", class: "form-control" %>
                  <% end %>

                  <div class ="hide" id="file-block" >
                    <label>
                      <%= I18n.t(:excel_file_import) %>
                    </label>
                    <%= file_field_tag :file, class: "form-control", style: "padding: 3px;" %>
                  </div >

                  <div class="hide" id="url-block">
                    <label>
                      <%= I18n.t(:request_list_links) %>
                    </label>
                    <%= text_field_tag :url, "" %>
                  </div>

                  <div class="hide" id="type-block">
                    <label>
                      <%= I18n.t(:component_type_identified_by_AI) %>
                    </label>

                    <div id="excel-type-block">
                      <% if @guw_model.allow_ml_excel == false %>
                        <%= select_tag "kind_excel", options_for_select(["Données", "Traitements", "Données + Traitements"]), class: "form-control" %>
                      <% else %>
                        <%= select_tag "kind_excel", options_for_select(["Données", "Traitements", "Données + Traitements", "Ne pas activer l'IA"]), class: "form-control" %>
                      <% end %>
                    </div>

                    <div id="jira-type-block">
                      <% if @guw_model.allow_ml_jira == false %>
                        <%= select_tag "kind_jira", options_for_select(["Données", "Traitements", "Données + Traitements"]), class: "form-control" %>
                      <% else %>
                        <%= select_tag "kind_jira", options_for_select(["Données", "Traitements", "Données + Traitements", "Ne pas activer l'IA"]), class: "form-control" %>
                      <% end %>
                    </div>

                    <div id="redmine-type-block">
                      <% if @guw_model.allow_ml_redmine == false %>
                        <%= select_tag "kind_redmine", options_for_select(["Données", "Traitements", "Données + Traitements"]), class: "form-control" %>
                      <% else %>
                        <%= select_tag "kind_redmine", options_for_select(["Données", "Traitements", "Données + Traitements", "Ne pas activer l'IA"]), class: "form-control" %>
                      <% end %>
                    </div>

                  </div>
                  <div id ="groups-block" class="hide">
                    <label>
                      <%= I18n.t(:host_group) %>
                    </label>
                    <%= text_field_tag :group_name, "", class: "form-control" %>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="modal-footer">
            <%= submit_tag I18n.t(:close), :class => 'btn btn-secondary', data: { :"dismiss" => "modal" } %>
            <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', data: { :"disable-with" => I18n.t(:please_wait) } %>
          </div>

      <% end %>


      <script>
          //$(document).ready(function(){
          $(document).ready(function() {

              $(".up,.down").click(function() {
                  var row = $(this).parents("tr.movable:first");

                  var firstrow = $('table tr.movable:first');

                  if ($(this).is(".up") && row.prevAll().length > 1) {
                      row.insertBefore(row.prev());
                  }
                  else if ($(this).is(".down") && row.nextAll().length > 0) {
                      row.insertAfter(row.next());
                  }
                  else {
                      return false;
                  }
              });

              $("#from").on("change",function(){
                  if (this.value == "") {
                      $("#file-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#url-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#groups-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#excel-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#jira-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#redmine-type-block").hide().find('input, textarea, select').prop('disabled', true);

                  }

                  else if (this.value == "Excel") {
                      $("#file-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#url-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#groups-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#excel-type-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#jira-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#redmine-type-block").hide().find('input, textarea, select').prop('disabled', true);

                      <% if !@guw_model.excel_ml_server.blank? %>
                      $("#type-block").show().find('input, textarea, select').prop('disabled', false);
                      <% else %>
                      $("#type-block").hide().find('input, textarea, select').prop('disabled', true);
                      <% end %>
                  } else if (this.value == "Jira") {
                      $("#url-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#file-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#groups-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#excel-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#jira-type-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#redmine-type-block").hide().find('input, textarea, select').prop('disabled', true);


                      <% if !@guw_model.jira_ml_server.blank? %>
                      $("#type-block").show().find('input, textarea, select').prop('disabled', false);
                      <% else %>
                      $("#type-block").hide().find('input, textarea, select').prop('disabled', true);
                      <% end %>
                  } else if (this.value == "Redmine") {

                      $("#url-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#file-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#groups-block").show().find('input, textarea, select').prop('disabled', false);
                      $("#excel-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#jira-type-block").hide().find('input, textarea, select').prop('disabled', true);
                      $("#redmine-type-block").show().find('input, textarea, select').prop('disabled', false);

                      <% if !@guw_model.redmine_ml_server.blank? %>
                      $("#type-block").show().find('input, textarea, select').prop('disabled', false);
                      <% else %>
                      $("#type-block").hide().find('input, textarea, select').prop('disabled', true);
                      <% end %>
                  }
              });
          });
      </script>

    </div>
  </div>
</div>

<div id="import_guw" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <%= form_tag guw.import_guw_path, :method => 'post', :multipart => true, :class => 'simple_form' do %>
    <div class="modal-header modal-drag">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
      <h3 id="myModalLabel"> <%= I18n.t(:import_data_from_uw) %></h3>
    </div>
    <div class="modal-body">
      <%= file_field_tag :file %>

      <div class="loading span11 hide">
        <h4>
          <%= I18n.t(:please_wait_import) %>
          <%= image_tag 'ajax-loader.gif' %>
        </h4>
      </div>
    </div>
    <div class="modal-footer">
      <button class="btn btn-secondary" data-dismiss="modal" aria-hidden="true"><% I18n.t(:close) %></button>
      <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
    </div>
  <% end %>
</div>

<!--<script>-->
<!--  //$(document).ready(function(){-->
<!--  $(document).ready(function() {-->
    <%# current_module_project.guw_unit_of_work_groups.each do |uowg| %>
      <%# @guw_model.guw_outputs.each do |go| %>
<!--        var sum = 0;-->
<!--        $(".total_<%# uowg.id %>_<%# go.id %>").each(function() {-->
<!--            var value = $(this).val();-->
<!--            if(!isNaN(value) && value.length != 0) {-->
<!--                sum += Math.round(parseFloat(value));-->
<!--            }-->
<!--        });-->

<!--        $("#total_<%# uowg.id %>_<%# go.id %>").html(sum + " <%# go.unit %>");-->
      <%# end %>
    <%# end %>
<!--  });-->
<!--</script>-->