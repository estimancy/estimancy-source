<%= form_tag guw.guw_unit_of_works_save_guw_unit_of_works_with_multiple_outputs_path do %>

  <div class="modal fade" id="modal_deported" tabindex="-1" role="dialog" aria-labelledby="modal_deported_label" aria-hidden="true" backdrop="static">
    <div class="modal-dialog">
      <div class="modal-deported" id="modal_deported_content">
      </div>
    </div>
  </div>

  <% @group_unit_of_works = Guw::GuwUnitOfWorkGroup.where(pbs_project_element_id: current_component.id, module_project_id: current_module_project.id) %>
  <% @guw_coefficients = @guw_model.guw_coefficients %>

  <div class="row-fluid">
    <div class="span12">
      <% if can? :execute_estimation_plan, @project %>
        <%= link_to I18n.t(:manage_the_groups), guw.guw_model_guw_unit_of_work_groups_path(@guw_model), class: "btn" %>
        <a href="#import_guw" role="button" class="btn" title="<%= I18n.t(:import_uo_from_excel)%>" data-toggle="modal">
          <%= I18n.t(:import) %>
        </a>
      <% end %>
      <% if @guw_model.allow_ml == true %>
        <button type="button" class="btn" data-toggle="modal" data-target="#ml_trt">
          Identifier les traitements
        </button>
        <button type="button" class="btn" data-toggle="modal" data-target="#ml_data">
          Identifier les données
        </button>
      <% end %>
      <%= link_to I18n.t(:export), guw.guw_model_export_path(@guw_model), class: "btn", method: "post" %>

      <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#stats_modal">
        Statistiques détaillées
      </button>
      <%= link_to "RAZ", "#!", class: "btn btn-inverse reset_retained pull-right button_margin_right", onclick: "multiraz()" %>
    </div>
  </div>

  <div class="row-fluid">
    <hr>
    <div class="pull-right">
      <% @guw_outputs = @guw_model.guw_outputs %>
      <% @guw_outputs.where(allow_subtotal: true).each do |guw_output| %>
        <span class="label label-success">
          Total <%= guw_output.name %> retenu :
          <span class="label label-success ajusted_size">
            <%= @group_unit_of_works.map do |i|
              i.guw_unit_of_works.where(selected: true).flatten.map do |i|
                i.ajusted_size.is_a?(Numeric) ? i.ajusted_size.to_f : (i.ajusted_size.nil? ? 0 : i.ajusted_size["#{guw_output.id}"].to_f)
              end
            end.flatten.compact.sum.to_f.round(3) %>
          </span>
        </span>
      <% end %>

      <% @guw_outputs.where(allow_subtotal: true).each do |guw_output| %>
        <span class="label label-success">
          Total <%= guw_output.name %> théorique :
          <span class="label label-success ajusted_size">
            <%= @group_unit_of_works.map do |i|
              i.guw_unit_of_works.where(selected: true).flatten.map do |i|
                i.size.is_a?(Numeric) ? i.size.to_f : (i.size.nil? ? 0 : i.size["#{guw_output.id}"].to_f)
              end
            end.flatten.compact.sum.to_f.round(3) %>
          </span>
        </span>
      <% end %>

      <span class="label label-info">
        &nbsp;&nbsp;&nbsp;&nbsp; <%= I18n.t(:number_of_uw) %> :
        <span class="label label-info number_of_unit_of_work">
          <%= @group_unit_of_works.map{|i| i.guw_unit_of_works.map(&:quantity)}.flatten.compact.sum %>
        </span>
      </span>

      <span class="label label-info">
        &nbsp;&nbsp;&nbsp;&nbsp; <%= I18n.t(:number_of_uw_modifies) %>
        <span class="label label-info modified_of_unit_of_work">
          <%= @group_unit_of_works.map{|i| i.guw_unit_of_works.where(flagged: true).map(&:quantity)}.flatten.compact.sum %>
        </span>
      </span>

      <span class="label label-info">
        &nbsp;&nbsp;&nbsp;&nbsp; <%= I18n.t(:number_of_uw_selected) %> :
        <span class="label label-info selected_of_unit_of_work">
          <%= @group_unit_of_works.map{|i| i.guw_unit_of_works.where(selected: true).map(&:quantity)}.flatten.compact.sum %>
        </span>
      </span>

    </div>
  </div>

  <hr>

  <div class="accordion" id="accordion">
    <% if @unit_of_work_groups.empty? %>
      <% if can? :execute_estimation_plan, @project %>
        <%= link_to I18n.t('add_new_unit_of_work_group'), guw.new_guw_unit_of_work_group_path, class: "btn pull-left button_margin_right" %>
        <% unless @unit_of_work_groups.empty? %>
          <%= link_to I18n.t(:new_unit_of_work), guw.new_guw_model_guw_unit_of_work_path(@guw_model, g: uowg), class: "btn pull-left button_margin_right" %>
        <% end %>
      <% end %>
    <% end %>

    <% @unit_of_work_groups.each_with_index do |uowg, j| %>
      <div class="accordion-heading" style="padding:5px;">
        <div class="row-fluid">
          <div class="span3">
            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse<%=uowg.id%>" id="accordion<%=uowg.id%>">
            <span style="font-weight: bold; font-size: 20px;" title="<%= uowg.comments %>">
              <%= uowg.name %>
            </span>
            </a>
          </div>

          <div class="span9">
            <% if can?(:execute_estimation_plan, @project) %>
              <%= link_to '', guw.edit_guw_model_guw_unit_of_work_group_path(@guw_model, uowg), class: "fa fa-pencil pull-right", style: "margin-top:3px;" %>
            <% end %>

            <div class="pull-right">

              <% @guw_outputs.where(allow_subtotal: true).each do |guw_output| %>
                <span class="label label-success">
                  Total <%= guw_output.name %> R. :
                  <span class="label label-success">
                    <%= [
                          uowg.guw_unit_of_works.where(selected: true).flatten.map do |i|
                            i.ajusted_size.is_a?(Numeric) ? i.ajusted_size.to_f : (i.ajusted_size.nil? ? 0 : i.ajusted_size["#{guw_output.id}"].to_f)
                          end
                        ].flatten.compact.sum.to_f.round(3) %>
                  </span>
                </span>
              <% end %>

              <% @guw_outputs.where(allow_subtotal: true).each do |guw_output| %>
                <span class="label label-success">
                  Total <%= guw_output.name %> T. :
                  <span class="label label-success">
                    <%= [
                          uowg.guw_unit_of_works.where(selected: true).flatten.map do |i|
                            i.size.is_a?(Numeric) ? i.size.to_f : (i.size.nil? ? 0 : i.size["#{guw_output.id}"].to_f)
                          end
                        ].flatten.compact.sum.to_f.round(3) %>
                  </span>
                </span>
              <% end %>

              <span class="label label-info">
                 <%= I18n.t(:number_of_uw) %> :
                <span class="<%= uowg.id %>_number">
                  <%= uowg.guw_unit_of_works.map(&:quantity).compact.sum %>
                </span>
              </span>
              <span class="label label-info">
                <%= I18n.t(:number_of_uw_modifies) %> :
                <span class="<%= uowg.id %>_flagged">
                  <%= uowg.guw_unit_of_works.where(flagged: true).map(&:quantity).compact.sum %>
                </span>
              </span>
              <span class="label label-info">
                <%= I18n.t(:number_of_uw_selected) %> :
                <span class="<%= uowg.id %>_selected">
                  <%= uowg.guw_unit_of_works.where(selected: true).map(&:quantity).compact.sum %>
                </span>
              </span>
            </div>
          </div>
        </div>
      </div>

      <div id="collapse<%= uowg.id %>" class="accordion-body collapse in">
        <% @guw_types = @guw_model.guw_types %>

        <div class="accordion-inner">
          <table class="table table-bordered table-condensed">
            <tr>
              <th></th>
              <th>#</th>
              <th><%= I18n.t :name %></th>
              <th>UO</th>

              <% @guw_model.orders.sort_by { |k, v| v.to_f }.each do |i| %>
                <% unless i[1].blank? %>
                  <% if Guw::GuwCoefficient.where(name: i[0]).first.class == Guw::GuwCoefficient %>
                    <% guw_coefficient = Guw::GuwCoefficient.where(name: i[0], guw_model_id: @guw_model.id, deported: false).first %>
                    <% unless guw_coefficient.nil? %>
                      <th>
                        <%= i[0] %>
                      </th>
                    <% end %>
                  <% elsif i[0] == "Coefficient" %>
                    <% unless @guw_model.guw_coefficients.where(deported: true).map(&:id).empty? %>
                      <th>
                        <%= i[0] %>
                      </th>
                    <% end %>
                  <% elsif i[0] == "Critères" %>
                    <% if @guw_types.map{|i| i.allow_criteria }.flatten.include?(true) %>
                      <th>
                        <%= I18n.t :criteria %>
                      </th>
                    <% end %>
                  <% elsif i[0] == "Coeff. de Complexité" %>
                    <% if i[1].blank? %>
                    <% else %>
                      <th>
                        <% if @guw_types.map{|i| i.allow_criteria }.flatten.include?(true) %>
                          Coeff. de complexité
                        <% else %>
                          Complexité
                        <% end %>
                      </th>
                    <% end %>
                  <% else %>
                    <th>
                      <%= i[0] %>
                    </th>
                  <% end %>
                <% end %>
              <% end %>

              <th class=""><%= I18n.t :actions %></th>
            </tr>

           <% uowg.guw_unit_of_works.includes(:guw_type, :guw_complexity).order("display_order ASC").each_with_index do |guow, i| %>
              <% @guw_type = guow.guw_type %>
              <% unless @guw_type.nil? %>
                <% @guw_complexities = @guw_type.guw_complexities.order("display_order ASC") %>
              <% end %>
              <tr>

                <td style="border-left: 6px solid <%= (guow.flagged == true) ? 'red' : 'green' %>" class="span1">
                  <%= check_box_tag "selected[]", guow.id, guow.selected, class: "selected checkbox_#{uowg.id}", selected: guow.id, disabled: !can?(:execute_estimation_plan, @project) %>
                  <%= hidden_field_tag "", uowg.id, class: "#{guow.id}_group" %>
                  <%= hidden_field_tag "", guow.id, class: "#{guow.id}" %>
                </td>

                <td class="span1">
                  <span class="badge badge-default">
                    <%= j %><%= guow.display_order %>
                  </span>
                </td>

                <td class="text_field_text_overflow span3">
                  <span class="pull-left">
                    <%= link_to guow.name, guw.guw_unit_of_work_load_comments_path(guow), title: guow.name, method: "post", remote: true %>
                  </span>
                </td>

                <td class="span3">
                  <% unless @guw_type.nil? %>
                    <%= select_tag "guw_type[#{guow.id}]", options_for_select(@guw_types.map do |i|
                                                                                default_complexity = i.guw_complexities.where(default_value: true).first
                                                                                ["#{i.name} #{default_complexity.nil? ? nil : '(' + default_complexity.weight.to_s + ')'}", i.id]
                                                                              end,
                                                                              selected: @guw_type.id),
                                   class: "guw_type",
                                   style: "width: 130px;",
                                   prompt: "",
                                   guw: guow.id %>
                  <% else %>
                    <%= select_tag "guw_type[#{guow.id}]", options_for_select(@guw_types.map{|i| [i.name, i.id]}),
                                   class: "guw_type",
                                   style: "width: 130px;",
                                   prompt: "",
                                   guw: guow.id %>
                  <% end %>
                </td>

                <% @guw_model.orders.sort_by { |k, v| v.to_f }.each do |i| %>
                  <% if i[1].blank? %>
                    <% if i[0] == "Coeff. de Complexité" %>
                      <% unless @guw_type.nil? %>
                        <%= select_tag "guw_complexity_#{guow.id}", options_for_select(@guw_complexities.map{|j| [j.name, j.id] },
                                                                                       selected: @guw_complexities.first.nil? ? nil : @guw_complexities.first.id),
                                       guw: guow.id,
                                       class: "guw_complexity hide" %>
                      <% end %>
                    <% end %>
                  <% else %>
                    <% if i[0] == "Coefficient" %>
                      <% unless @guw_coefficients.where(deported: true).map(&:id).empty? %>
                        <%
                           elmnts = []
                           Guw::GuwCoefficient.where(guw_model_id: @guw_model.id, deported: true).each do |guw_coefficient|

                             ceuw = Guw::GuwCoefficientElementUnitOfWork.where(guw_unit_of_work_id: guow.id,
                                                                               guw_coefficient_id: guw_coefficient.id).first
                             unless ceuw.nil?
                               elm = ceuw.guw_coefficient_element
                               unless elm.nil?
                                 elmnts << elm.value
                               end
                             end
                           end
                        %>

                        <td class="span2">
                          <% v = elmnts.flatten.compact.inject(&:*) %>
                          <%= link_to v.nil? ? '...' : v.to_f.round(user_number_precision), guw.deported_path(guw_unit_of_work_id: guow.id), remote: true, method: "POST" %>
                        </td>

                      <% end %>
                    <% elsif i[0] == "Critères" %>
                      <% if @guw_types.map{|i| i.allow_criteria }.flatten.include?(true) %>
                        <td class="span2">
                          <% unless @guw_type.nil? %>
                            <% if @guw_type.allow_criteria == true %>
                              <span class="text-center criteria_label_<%= guow.id %>">
                                <% counting = guow.guw_unit_of_work_attributes.where(guw_type_id: @guw_type.id).map(&:most_likely).compact %>
                                <% if counting.empty? %>
                                  <%= link_to "", guw.guw_unit_of_work_load_cotations_path(guow), method: "post", remote: true, class: "fa fa-gears #{(guow.missing_value == true) ? 'red' : (guow.guw_complexity_id !=  guow.guw_original_complexity_id ? 'blue' : '') }" %>
                                <% else %>
                                  <%= link_to "", guw.guw_unit_of_work_load_cotations_path(guow), method: "post", remote: true, class: "fa fa-gears #{(guow.missing_value == true) ? 'red' : (guow.guw_complexity_id !=  guow.guw_original_complexity_id ? 'blue' : 'green')}" %>
                                <% end %>
                              </span>
                            <% else %>
                              <span class="text-center">
                                -
                              </span>
                            <% end %>
                          <% end %>
                        </td>
                      <% end %>
                    <% elsif i[0] == "Coeff. de Complexité" %>
                      <td class="span2">
                        <span class="cotation_label_<%= guow.id %>">
                          <% unless @guw_type.nil? %>
                            <% if @guw_type.display_threshold == true %>
                              <% if guow.off_line == true %>
                                <% @default_complexity = @guw_type.guw_complexities.where(default_value: true).first %>
                                <%= select_tag "guw_complexity_#{guow.id}", options_for_select(@guw_type.guw_complexities.order("display_order ASC").map{|i| [i.name, i.id] }, selected: nil),
                                               guw: guow.id,
                                               class: "guw_complexity",
                                               prompt: "HSAT",
                                               readonly: !@guw_type.allow_complexity,
                                               style: "width: 70px;" %>
                              <% elsif guow.off_line_uo == true %>
                                <%= select_tag "guw_complexity_#{guow.id}", options_for_select(@guw_type.guw_complexities.order("display_order ASC").map{|i| [i.name, i.id] }, selected: nil),
                                               guw: guow.id,
                                               class: "guw_complexity",
                                               prompt: "HSUO",
                                               readonly: !@guw_type.allow_complexity,
                                               style: "width: 70px;" %>
                              <% elsif guow.guw_complexity.nil? %>
                                <%= select_tag "guw_complexity_#{guow.id}", options_for_select(@guw_type.guw_complexities.order("display_order ASC").map{|i| [i.name, i.id] }, selected: @guw_type.guw_complexities.where(default_value: true).first.nil? ? guow.guw_complexity_id : @guw_type.guw_complexities.where(default_value: true).first.id),
                                               guw: guow.id,
                                               class: "guw_complexity",
                                               include_blank: false,
                                               readonly: !@guw_type.allow_complexity,
                                               style: "width: 70px;" %>
                              <% else %>
                                <%= select_tag "guw_complexity_#{guow.id}", options_for_select(@guw_type.guw_complexities.order("display_order ASC").map{|i| [i.name, i.id] }, selected: guow.guw_complexity_id), guw: guow.id,
                                               class: "guw_complexity",
                                               include_blank: false,
                                               readonly: !@guw_type.allow_complexity,
                                               style: "width: 70px;" %>
                              <% end %>
                            <% else %>
                              <% if guow.off_line == true %>
                                HSAT
                              <% elsif  guow.off_line_uo == true %>
                                HSUO
                              <% else %>
                                <% if guow.guw_complexity.nil? %>
                                  -
                                <% else %>
                                  <%= number_field_tag "complexity_coeff[#{guow.id}]", guow.intermediate_percent,
                                                       style: "width: 43px;",
                                                       class: "complexity_weight-#{uowg.id} guw-#{guow.id}",
                                                       readonly: true %>
                                      <% if @guw_type.allow_complexity %>
                                    <%= number_field_tag "complexity_coeff_ajusted[#{guow.id}]", guow.intermediate_weight,
                                                         style: "width: 43px;",
                                                         class: "complexity_weight-#{uowg.id} retained-guw-#{guow.id} retained-gp-#{uowg.id} guw-#{guow.id} retained",
                                                         step: 0.001 %>
                                  <% end %>
                                <% end %>
                              <% end %>
                            <% end %>
                          <% end %>
                        </span>
                      </td>
                    <% elsif Guw::GuwCoefficient.where(name: i[0]).first.class == Guw::GuwCoefficient %>
                      <% guw_coefficient = Guw::GuwCoefficient.where(name: i[0],
                                                                     guw_model_id: @guw_model.id).first %>
                      <% unless guw_coefficient.nil? %>

                        <% results = guw_coefficient.guw_coefficient_elements %>
                        <% default = results.where(default: true).first %>
                        <% ceuw = Guw::GuwCoefficientElementUnitOfWork.where(guw_unit_of_work_id: guow,
                                                                             guw_coefficient_id: guw_coefficient.id).first %>
                        <% if guw_coefficient.deported == false %>
                          <% unless guw_coefficient.guw_coefficient_elements.empty? %>

                            <% if guw_coefficient.coefficient_type == "Pourcentage" || guw_coefficient.coefficient_type == "Coefficient" %>
                              <td class="span2 <%= guw_coefficient.id %>_<%= guow.id %>">

                                <%= number_field_tag "guw_coefficient_percent[#{guow.id}][#{guw_coefficient.id}]", ceuw.nil? ? results.first.value : ceuw.percent.to_f.round(2),
                                                     style: "width: 43px;",
                                                     class: "complexity_weight-#{uowg.id} guw-#{guow.id}",
                                                     readonly: (guw_coefficient.allow_intermediate_value == true),
                                                     step: 0.001 %>

                                <% if guw_coefficient.allow_intermediate_value == true %>
                                  <%= number_field_tag "guw_coefficient_percent[#{guow.id}][#{guw_coefficient.id}]", ceuw.nil? ? results.first.value : ceuw.percent.to_f.round(2),
                                                       style: "width: 43px;",
                                                       class: "complexity_weight-#{uowg.id} retained-guw-#{guow.id} guw-#{guow.id} retained-gp-#{uowg.id} retained",
                                                       step: 0.001 %>
                                <% end %>

                              </td>
                            <% else %>
                              <td class="span2">
                                <% unless @guw_type.nil? %>
                                  <% results = guw_coefficient.guw_coefficient_elements.map{|i| i.guw_complexity_coefficient_elements.includes(:guw_coefficient_element).where(guw_type_id: @guw_type.id).select{|ct| ct.value != nil }.map{|i| i.guw_coefficient_element }.uniq }.flatten.compact.sort! { |a, b|  a.display_order.to_i <=> b.display_order.to_i } %>
                                  <% unless results.empty? %>
                                    <%= select_tag "guw_coefficient[#{guow.id}][#{guw_coefficient.id}]", options_for_select(results.map{|i| [i.name, i.id]},
                                                                                                                            selected: ceuw.nil? ? (default.nil? ? (results.first.nil? ? nil : results.first.value) : default.value) : ceuw.guw_coefficient_element_id),
                                                   class: "guw_coefficient guw-#{guow.id}",
                                                   guw: guow.id,
                                                   readonly: !can?(:execute_estimation_plan, @project),
                                                   style: "width: 70px;" %>
                                  <% end %>
                                <% end %>
                              </td>
                          <% end %>
                        <% else %>
                          <td>
                            -
                          </td>
                        <% end %>
                      <% else %>
                        <%= hidden_field_tag "guw_coefficient[#{guow.id}][#{guw_coefficient.id}]", (ceuw.nil? ? (default.nil? ? (results.first.nil? ? nil : results.first.id) : default.id) : (ceuw.guw_coefficient_element.nil? ? results.first.id : ceuw.guw_coefficient_element_id)) %>
                      <% end %>
                    <% end %>
                    <% elsif Guw::GuwOutput.where(name: i[0]).first.class == Guw::GuwOutput %>
                      <% guw_output = Guw::GuwOutput.where(name: i[0], guw_model_id: @guw_model.id).first %>

                      <% unless guw_output.nil? || @guw_type.nil? %>

                        <% got = Guw::GuwOutputType.where(guw_model_id: @guw_model.id,
                                                          guw_output_id: guw_output.id,
                                                          guw_type_id: @guw_type.id).first %>

                        <% unless got.nil? %>
                          <td class="span2">
                            <% if got.display_type == "display" %>
                              <span class="ajusted_size_<%= guow.id %>">
                                <%= number_field_tag "display_ajusted_size[#{guow.id}][#{guw_output.id}]", guow.size.nil? ? '' : (guow.size.is_a?(Numeric) ? guow.size : (guow.size["#{guw_output.id}"].nil? ? '' : guow.size["#{guw_output.id}"].to_f.round(2))),
                                                     step: 0.001,
                                                     readonly: true,
                                                     class: "guw-#{guow.id} guw_number_field_tag retained",
                                                     style: "width: 43px;" %>
                              </span>
                            <% elsif got.display_type == "modif" %>
                              <span class="ajusted_size_<%= guow.id %>">
                                <%= number_field_tag "ajusted_size[#{guow.id}][#{guw_output.id}]", guow.ajusted_size.nil? ? '' : (guow.ajusted_size.is_a?(Numeric) ? guow.ajusted_size : (guow.ajusted_size["#{guw_output.id}"].nil? ? '' : guow.ajusted_size["#{guw_output.id}"].to_f.round(2))),
                                                     step: 0.001,
                                                     class: "retained-guw-#{guow.id} guw-#{guow.id} retained-gp-#{uowg.id} guw_number_field_tag retained",
                                                     style: "width: 43px;" %>
                              </span>
                            <% elsif got.display_type == nil %>
                              <span class="ajusted_size_<%= guow.id %>">
                                -
                              </span>
                            <% end %>

                            <% if got.display_type == "display_modif" %>
                              <span class=" size_label_<%= guow.id %>">
                                <%= number_field_tag "size[#{guow.id}][#{guw_output.id}]", guow.size.nil? ? '' : (guow.size.is_a?(Numeric) ? guow.size : (guow.size["#{guw_output.id}"].nil? ? '' : guow.size["#{guw_output.id}"].to_f.round(2))),
                                                     class: "size-#{uowg.id} guw-#{guow.id} guw_number_field_tag",
                                                     readonly: true,
                                                     style: "width: 43px;",
                                                     step: 0.001 %>
                              </span>
                              <span class="ajusted_size_<%= guow.id %>">
                                <%= number_field_tag "ajusted_size[#{guow.id}][#{guw_output.id}]", guow.ajusted_size.nil? ? '' : (guow.ajusted_size.is_a?(Numeric) ? guow.ajusted_size : (guow.ajusted_size["#{guw_output.id}"].nil? ? '' : guow.ajusted_size["#{guw_output.id}"].to_f.round(2))),
                                                     step: 0.001,
                                                     class: "retained-guw-#{guow.id} guw-#{guow.id} retained-gp-#{uowg.id} guw_number_field_tag retained",
                                                     style: "width: 43px;" %>
                              </span>
                            <% end %>
                          </td>
                        <% else %>
                          <td class="span2">
                            <span class="ajusted_size_<%= guow.id %>">
                              <%= number_field_tag "ajusted_size[#{guow.id}][#{guw_output.id}]", guow.ajusted_size.nil? ? '' : (guow.ajusted_size.is_a?(Numeric) ? guow.ajusted_size : (guow.ajusted_size["#{guw_output.id}"].nil? ? '' : guow.ajusted_size["#{guw_output.id}"].to_f.round(2))),
                                                   step: 0.001,
                                                   class: "retained-guw-#{guow.id} guw-#{guow.id} retained-gp-#{uowg.id} guw_number_field_tag retained",
                                                   style: "width: 43px;" %>
                            </span>
                          </td>
                        <% end %>
                      <% end %>
                    <% end %>
                  <% end %>
                <% end %>

                <td class="span3">
                  <% if can? :execute_estimation_plan, @project %>
                    <% if @guw_model.allow_ml == true %>
                      <%= link_to "", guw.ml_trt_path(guw_unit_of_work_id: guow, guw_model_id: @guw_model.id), class: "fa fa-magic", title: "Fast Estimate", method: "POST" %>
                    <% end %>
                    <%= link_to "", "#!", onclick: "raz_line(#{guow.id})", class: "fa fa-eraser", title: "RAZ" %>

                    <%= link_to "", guw.guw_unit_of_work_duplicate_path(guow), class: "fa fa-copy", method: "post", title: I18n.t(:duplicate) %>
                    <%= link_to "", guw.guw_unit_of_work_up_path(guow), class: "fa fa-arrow-up", title: I18n.t(:up) %>
                    <%= link_to "", guw.guw_unit_of_work_down_path(guow), class: "fa fa-arrow-down", title: I18n.t(:down) %>
                    <%= link_to "", guw.new_guw_model_guw_unit_of_work_path(@guw_model, g: uowg, position: guow.display_order), class: "fa fa-plus", title: I18n.t(:add) %>
                    <%= link_to "", guw.edit_guw_model_guw_unit_of_work_path(@guw_model, guow, g: uowg), class: "fa fa-pencil", title: I18n.t(:edit) %>
                    <%= link_to "", guw.guw_unit_of_work_path(guow), method: "delete", confirm: I18n.t('are_you_sure'), class: "fa fa-trash", title: I18n.t(:delete) %>
                  <% end %>
                </td>
              </tr>
           <% end %>
          </table>
          <% if can? :execute_estimation_plan, @project %>
            <%= link_to I18n.t('add_new_unit_of_work_group'), guw.new_guw_unit_of_work_group_path, class: "btn pull-left button_margin_right" %>
            <% unless @unit_of_work_groups.empty? %>
              <%= link_to I18n.t('new_unit_of_work'), guw.new_guw_model_guw_unit_of_work_path(@guw_model, g: uowg), class: "btn pull-left button_margin_right" %>
            <% end %>
            <button type="submit" class="btn btn-primary pull-right"><%= I18n.t(:calculate) %></button>
            <%= link_to "RAZ", "#!", class: "btn btn-inverse reset_retained button_margin_right pull-right", onclick: "raz(#{uowg.id})" %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
<% end %>


<div id="import_guw" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <%= form_tag guw.import_guw_path, :method => 'post', :multipart => true, :class => 'simple_form' do %>
    <div class="modal-header modal-drag">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
      <h3 id="myModalLabel"> <%= I18n.t(:import_data_from_uw) %></h3>
    </div>
    <div class="modal-body">
      <%= file_field_tag :file %>

      <div class="loading span11 hide">
        <h4>
          <%= I18n.t(:please_wait_import) %>
          <%= image_tag 'ajax-loader.gif' %>
        </h4>
      </div>
    </div>
    <div class="modal-footer">
      <button class="btn" data-dismiss="modal" aria-hidden="true">Fermer</button>
      <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
    </div>
  <% end %>
</div>

<style>
  td {
    vertical-align: middle;
  }
</style>

<script>
  function raz(group){
    $('.retained-gp-' + group).val('');
    return false; // prevent default click action from happening!
    e.preventDefault();
  }

  function raz_line(uo){
    $('.retained-guw-' + uo).val('');
    return false; // prevent default click action from happening!
    e.preventDefault();
  }

  function multiraz(uo){
    $('.retained').val('');
    return false; // prevent default click action from happening!
    e.preventDefault();
  }

  function reset(uo){
    $('.guw-' + uo).val('');
    return false; // prevent default click action from happening!
    e.preventDefault();
  }

  function toggle_group(group_id){
    var number_of_checked = 0;
    var number_of_line = 0;

    $(".checkbox_" + group_id).each(function() {
      if (this.checked)
        number_of_checked = number_of_checked + 1;
      number_of_line = number_of_line + 1
    });
    if (number_of_checked < number_of_line){
      $(".checkbox_" + group_id).attr("checked", true);
    }
    else if (number_of_checked == number_of_line){
      $(".checkbox_" + group_id).attr("checked", false);
    }
  }

  $(document).ready(function () {

    $('.selected').change(function(){
      $.ajax({
        url: "<%= guw.change_selected_state_path %>",
        data: "guw_unit_of_work_id=" + this.value + "&guw_unit_of_work_group_id=" + $("." + this.value + "_group").val()
      });
    });

    $('.guw_type').change(function(){
      reset($(this).attr("guw"));
      $.ajax({
        url: "<%= guw.change_cotation_path %>",
        data: "guw_type_id=" + this.value + "&guw_unit_of_work_id=" + $(this).attr("guw")
      });
    });

    $('.guw_work_unit').change(function(){
      $.ajax({
        url: "<%= guw.change_work_unit_path %>",
        data: "guw_work_unit_id=" + this.value + "&guw_unit_of_work_id=" + $(this).attr("guw")
      });
    });
  });
</script>

<div class="modal fade" id="modal_cotation" tabindex="-1" role="dialog" aria-labelledby="modal_cotation_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog">
    <div class="modal-cotation" id="modal_cotation_content">
    </div>
  </div>
</div>

<div class="modal fade" id="modal_comments" tabindex="-1" role="dialog" aria-labelledby="modal_comments_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content" id="modal_comments_content">
    </div>
  </div>
</div>

<div class="modal fade" id="modal_trackings" tabindex="-1" role="dialog" aria-labelledby="modal_trackings_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content" id="modal_trackings_content">
    </div>
  </div>
</div>

<div class="modal fade" id="modal_name" tabindex="-1" role="dialog" aria-labelledby="modal_name_label" aria-hidden="true" backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content" id="modal_name_content">
    </div>
  </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="stats_modal" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header modal-drag">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Statistiques détaillés</h4>
      </div>
      <div class="modal-body">
        <% begin %>
          <%= render partial: "guw/guw_unit_of_works/details" %>
        <% rescue %>
          Une erreur est survenue lors de l'affichage des statistiques détaillées
        <% end %>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="ml_trt" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <%= form_tag guw.ml_trt_path, :method => 'POST', :multipart => true, :class => 'simple_form' do %>

        <div class="modal-header modal-drag">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">
            Importer les traitements
          </h4>
        </div>

        <div class="modal-body" style="height: inherit;">

          <%= hidden_field_tag "guw_model_id", @guw_model.id %>

          <h5>
            Importer un fichier Excel (xlsx uniquement)
          </h5>
          <%= file_field_tag :file %>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
          <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
        </div>

      <% end %>
    </div>
  </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="ml_data" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <%= form_tag guw.ml_data_path, :method => 'POST', :multipart => true, :class => 'simple_form' do %>

        <div class="modal-header modal-drag">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">
            Importer les données
          </h4>
        </div>

        <div class="modal-body" style="height: inherit;">

          <%= hidden_field_tag "guw_model_id", @guw_model.id %>

          <h5>
            Importer un fichier Excel (xlsx uniquement)
          </h5>
          <%= file_field_tag :file %>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
          <%= submit_tag I18n.t(:import), :class => 'btn btn-primary', :onclick => "$('.loading').show();" %>
        </div>

      <% end %>
    </div>
  </div>
</div>
