<h3>
  <%= I18n.t(:cal_effort)%>
</h3>

<%= form_tag ge.ge_model_save_efforts_path(@ge_model) do %>

  <% if @ge_model.ge_factors.size > 0 %>
      <h4><b> <%= I18n.t(:select_factor_value) %> </b></h4>

      <div class="row-fluid col-wrap">
        <div class="accordion" id="accordion_factor">

          <% @all_factors_values_hash.each do |scale_prod, factor_values_per_type| %>
            <% factor_values_per_type.each do |type, factor_values| %>

              <% if (factor_values.length == 1) && (factor_values.first.last.length == 1) %>
                <% factor_value = factor_values.first %>
                <% value = factor_value.last[0] %>
                <%= hidden_field_tag("#{scale_prod}_factor[#{value.factor_alias}]", value.id) %>

              <% else %>
                <% factor_type = type.gsub(/( )/, '_').downcase %>
                  <div class="span6 factor_group">
                    <div class="accordion-group">
                      <div class="accordion-heading">
                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion_factor" href="#<%= factor_type %>">
                          <i class="fa fa-caret-down"></i>
                          <b><%= type %></b>
                        </a>
                      </div><br>
                      <div id="<%= factor_type %>" class="accordion-body collapse in">
                        <div class="accordion-inner">

                          <% factor_values.each do |key, values| %>

                            <% if values.length == 1 %>
                              <%= hidden_field_tag("#{scale_prod}_factor[#{key}]", values.first.id) %>
                            <% elsif values.length > 1 %>
                              <div class="row-fluid">
                                <% ge_factor = values[0].ge_factor %>
                                <div class="span1 attribute_tooltip" title="<b><%= ge_factor.long_name %> : </b><br/> <%= ge_factor.description %>">
                                  <%= key.humanize.upcase %>
                                </div>
                                <div class="span1"></div>
                                <div class="span8">
                                  <%#= select_tag("#{scale_prod}_factor[#{key}]", options_for_select(values.map{ |f| [f.value_text, f.id]}, :selected => (@ge_input_values["#{key}"][:ge_factor_value_id] unless @ge_input_values["#{key}"].nil?)), { class: "slide input-xlarge" }) %>
                                  <% ids_list = values.map{ |f| f.id } %>
                                  <% js_factor_data = Hash.new %>
                                  <% values.map{ |f| js_factor_data["#{f.id}"] = f.value_text }  %>
                                  <% @ge_input_values["#{key}"].nil? ? (selected_value = 0) : (selected_value = @ge_input_values["#{key}"][:ge_factor_value_id]) %>

                                  <!-- Get the default value -->
                                  <% default_value = 0 %>
                                  <% default_array = values.select{ |v| v.default? } %>
                                  <% unless default_array.empty? %>
                                    <% default_value = default_array.first.id %>
                                  <% end %>

                                  <input type="text" name='<%= "#{scale_prod}_factor[#{key}]" %>' id='<%= "factor_#{key}" %>' class="factor-slider" value="" />
                                </div>
                              </div><br><br>

                              <script>

                                var data_ids = <%= raw ids_list.to_json.html_safe %> ;
                                var data_text_hash = <%= raw js_factor_data.to_json.html_safe %>;
                                var value_from = parseInt(<%= ids_list.index(selected_value) %>);
                                var default_value = parseInt(<%= ids_list.index(default_value) %>);

                                <!-- Get the default value if value_from is NaN -->
                                if(isNaN(value_from)){
                                  value_from = default_value;
                                }

                                $('#<%= "factor_#{key}" %>').ionRangeSlider({
                                  values: data_ids, //Array of factor_values ids
                                  from: value_from,
                                  prettify: function (num) {
                                    return data_text_hash[num];
                                  }
                                });

                              </script>
                            <% end %>
                          <% end %>

                        </div>
                      </div>
                    </div>
                  </div>
              <% end %>
            <% end %>
          <% end %>
        </div>
      </div>
  <% end %>

  <br><br>
  <div class="row-fluid">
    <div class="span6">
      <h4>
        <b>
          <%= I18n.t :enter_size_in, parameter: @ge_model.size_unit %>
        </b>
      </h4>

      <% attr = PeAttribute.find_by_alias("retained_size") %>
      <% previous_ev = EstimationValue.where(:pe_attribute_id => attr.id,
                                             :module_project_id => current_module_project.previous.first,
                                             :in_out => "output").first %>

      <% current_ev = EstimationValue.where(:pe_attribute_id => attr.id,
                                             :module_project_id => current_module_project.id,
                                             :in_out => "input").first %>

      <% component_id = current_component.id %>
      <% precision = attr.precision.nil? ? user_number_precision : attr.precision %>

      <table class="table table-condensed table-striped">
        <tr>
          <% if @ge_model.three_points_estimation == true %>
            <th><%= I18n.t(:bottom)%></th>
          <% end %>
          <th><%= I18n.t(:probable)%></th>
          <% if @ge_model.three_points_estimation == true %>
            <th><%= I18n.t(:top)%></th>
          <% end %>
        </tr>
        <tr>
          <% if @ge_model.three_points_estimation == true %>
            <td>
              <% if (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
                <%= hidden_field_tag "retained_size_low", Ge::GeModel::display_size(previous_ev, current_ev, "low", component_id), step: "any", class: "input-medium" %>
                <%= number_field_tag "", Ge::GeModel::display_size(previous_ev, current_ev, "low", component_id).to_f.round(user_number_precision), step: "any", class: "input-medium", disabled: true %>
              <% else %>
                <%= number_field_tag "retained_size_low", Ge::GeModel::display_size(previous_ev, current_ev, "low", component_id), step: "any", class: "input-medium" %>
              <% end %>
            </td>
          <% end %>
          <td>
            <% if (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
              <%= hidden_field_tag "retained_size_most_likely", Ge::GeModel::display_size(previous_ev, current_ev, "most_likely", component_id), step: "any", class: "input-medium" %>
              <%= number_field_tag "", Ge::GeModel::display_size(previous_ev, current_ev, "most_likely", component_id).to_f.round(user_number_precision), step: "any", class: "input-medium", disabled: true %>
            <% else %>
              <%= number_field_tag "retained_size_most_likely", Ge::GeModel::display_size(previous_ev, current_ev, "most_likely", component_id), step: "any", class: "input-medium" %>
            <% end %>
          </td>
          <% if @ge_model.three_points_estimation == true %>
            <td>
              <% if (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
                <%= hidden_field_tag "retained_size_high", Ge::GeModel::display_size(previous_ev, current_ev, "high", component_id), step: "any", class: "input-medium" %>
                <%= number_field_tag "", Ge::GeModel::display_size(previous_ev, current_ev, "high", component_id).to_f.round(user_number_precision), step: "any", class: "input-medium", disabled: true %>
              <% else %>
                <%= number_field_tag "retained_size_high", Ge::GeModel::display_size(previous_ev, current_ev, "high", component_id), step: "any", class: "input-medium" %>
              <% end %>
            </td>
          <% end %>
        </tr>
      </table>
    </div>

    <div class="span6">
      <% attr = PeAttribute.find_by_alias("effort") %>
      <% ev = EstimationValue.where(:pe_attribute_id => attr.id, :module_project_id => current_module_project.id).first %>
      <% component_id = current_component.id %>
      <h4>
        <b>
          <%= I18n.t(:cal_effort_for, parameter: convert_label(ev.nil? ? '': ev.send("string_data_probable")[component_id], @project.organization))%>
        </b>
      </h4>
      <table class="table table-condensed table-striped">
        <tr>
          <% if @ge_model.three_points_estimation == true %>
            <th><%= I18n.t(:bottom)%></th>
          <% end %>
          <th><%= I18n.t(:probable)%></th>
          <% if @ge_model.three_points_estimation == true %>
            <th><% I18n.t(:high)%></th>
          <% end %>
        </tr>
        <tr>
          <% if @ge_model.three_points_estimation == true %>
            <td>
              <% unless (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
                <%= hidden_field_tag "effort_low", (ev.nil? ? '' : ev.send("string_data_low")[component_id]) %>
                <%= number_field_tag "", (ev.nil? ? '' : ev.send("string_data_low")[component_id]), step: "any", class: "input-medium", disabled: true %>
              <% else %>
                <%= number_field_tag "effort_low", convert_with_specific_precision(ev.nil? ? '': ev.send("string_data_low")[component_id], @project.organization, 3), step: "any", class: "input-medium" %>
              <% end %>
            </td>
          <% end %>

          <td>
            <% unless (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
              <%= hidden_field_tag "effort_most_likely", (ev.nil? ? '' : ev.send("string_data_most_likely")[component_id]) %>
              <%= number_field_tag "", (ev.nil? ? '' : ev.send("string_data_most_likely")[component_id]), step: "any", class: "input-medium", disabled: true %>
            <% else %>
              <%= number_field_tag "effort_most_likely", convert_with_specific_precision(ev.nil? ? '': ev.send("string_data_most_likely")[component_id], @project.organization, 3), step: "any", class: "input-medium" %>
            <% end %>
          </td>

          <% if @ge_model.three_points_estimation == true %>
            <td>
              <% unless (!@ge_model.enabled_input || cannot?(:alter_estimation_plan, @project)) %>
                <%= hidden_field_tag "effort_high", (ev.nil? ? '' : ev.send("string_data_high")[component_id]) %>
                <%= number_field_tag "", (ev.nil? ? '' : ev.send("string_data_high")[component_id]), step: "any", class: "input-medium", disabled: true %>
              <% else %>
                <%= number_field_tag "effort_high", convert_with_specific_precision(ev.nil? ? '': ev.send("string_data_high")[component_id], @project.organization, 3), step: "any", class: "input-medium" %>
              <% end %>
            </td>
          <% end %>
        </tr>
      </table>
    </div>

    <% if can? :execute_estimation_plan, @project %>
        <button type="submit" class="btn btn-default btn-mini pull-right"><%= I18n.t(:save) %></button>
    <% end %>

    <br>
    <hr>
  </div>
<% end %>
