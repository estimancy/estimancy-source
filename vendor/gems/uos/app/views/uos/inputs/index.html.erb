<style>
  select, input{
    width: 100px;
  }

  .icon-center{
    padding-left: 9px;
  }

  .black-question-mark { color:black; }
  .purple-exclamation-mark { color:pink; }
  .yellow-exclamation-mark { color: #ebeb00; }
  .green-check-mark { color:green; }
  .blue-info-mark { color:blue; }
  .orange-exclamation-mark { color:orange; }
  .red-star { color:red; }

  .compressed{
    width: 30px;
    margin-left: 11px;
  }

</style>

<div class="tabs">
  <ul>
    <li>
      <a href="#tabs-1">UOs Modules</a>
    </li>
  </ul>

  <%= form_tag "/uos/save_uos" do %>

    <%= hidden_field_tag "module_project_id", @module_project.id %>
    <div id="tabs-1" style="overflow-x: auto;">
      <table id="myTable" class="table table-striped table-bordered table-condensed ">
        <tr>
          <th colspan="6"></th>
          <th colspan="3">Size</th>
          <th></th>
          <th colspan="3"> Gross Value </th>
        </tr>
        <tr>
          <th>Actions</th>
          <th>Flag</th>
          <th>Items</th>
          <th>ItemsTechnology</th>
          <th>Uos</th>
          <th>Complexity</th>
          <th>L</th>
          <th>ML</th>
          <th>H</th>
          <th>W</th>
          <th>L</th>
          <th>ML</th>
          <th>H</th>
        </tr>

        <tr>
          <th colspan="6">Overall</th>
          <td>
            <%= text_field_tag "overall_size_low", @size.nil? ? '' : @size.string_data_low[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
          <td>
            <%= text_field_tag "overall_size_most_likely", @size.nil? ? '' : @size.string_data_most_likely[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
          <td>
            <%= text_field_tag "overall_size_high", @size.nil? ? '' : @size.string_data_high[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
          <td> </td>
          <td >
            <%= text_field_tag "overall_gross_low", @gross_size.nil? ? '' : @gross_size.string_data_low[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
          <td>
            <%= text_field_tag "overall_gross_most_likely", @gross_size.nil? ? '' : @gross_size.string_data_most_likely[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
          <td >
            <%= text_field_tag "overall_gross_high", @gross_size.nil? ? '' : @gross_size.string_data_high[current_component.id], :class => "overall compressed", readonly: true %>
          </td>
        </tr>

        <%= render :partial => 'row' %>
      </table>

      <%= submit_tag I18n.t(:save), :class => "btn" %>
      <%= submit_tag I18n.t(:apply), :class => "btn" %>
      <%= link_to I18n.t(:back), main_app.root_url, :class => "btn" %>
      <%= submit_tag "Mettre à jour les données brutes", :class => "btn pull-right" %>

    </div>

  <% end %>

</div>

<script>
  function initialize_gross_behaviour(index){
    $(".icon-star").click(function(){
      switch(true) {
        case ($(this).hasClass('black-question-mark')):
          $(this).removeClass('black-question-mark').addClass('purple-exclamation-mark');
          $(this).next().val("purple");
          break;
        case ($(this).hasClass('purple-exclamation-mark')):
          $(this).removeClass('purple-exclamation-mark').addClass('yellow-exclamation-mark');
          $(this).next().val("yellow");
          break;
        case ($(this).hasClass('yellow-exclamation-mark')):
          $(this).removeClass('yellow-exclamation-mark').addClass('green-check-mark');
          $(this).next().val("green");
          break;
        case ($(this).hasClass('green-check-mark')):
          $(this).removeClass('green-check-mark').addClass('blue-info-mark');
          $(this).next().val("blue");
          break;
        case ($(this).hasClass('blue-info-mark')):
          $(this).removeClass('blue-info-mark').addClass('orange-exclamation-mark');
          $(this).next().val("orange");
          break;
        case ($(this).hasClass('orange-exclamation-mark')):
          $(this).removeClass('orange-exclamation-mark').addClass('red-star');
          $(this).next().val("red");
          break;
        case ($(this).hasClass('red-star')):
          $(this).removeClass('red-star').addClass('black-question-mark');
          $(this).next().val("black");
      }
    });

    var selector = "#size_low_" + index +
            ", #size_most_likely_" + index +
            ", #size_high_" + index +
            ", #weight_" + index

    $(selector).on("blur change", function(e){
      $.ajax({ url:'/uos/load_gross',
        data: 'size_low=' + $('#size_low_' + index).val()
                + '&size_most_likely=' + $('#size_most_likely_' + index).val()
                + '&size_high=' + $('#size_high_' + index).val()
                + '&weight=' + $('#weight_' + index).val()
                + '&technology=' + $('#technology_' + index).val()
                + '&uow=' + $('#uow_' + index).val()
                + '&complexity=' + $('#complexity_' + index).val()
                + '&index=' + $(this).closest('tr').index()
      });
    });

    $(", #uow_" + index +
      ", #technology_" + index +
      ", #complexity_" + index).on("change", function(e){

      $.ajax({ url:'/uos/load_gross',
        data: 'size_low=' + $('#size_low_' + index).val()
                + '&size_most_likely=' + $('#size_most_likely_' + index).val()
                + '&size_high=' + $('#size_high_' + index).val()
                + '&weight=' + $('#weight_' + index).val()
                + '&technology=' + $('#technology_' + index).val()
                + '&uow=' + $('#uow_' + index).val()
                + '&complexity=' + $('#complexity_' + index).val()
                + '&index=' + $(this).closest('tr').index()

      });
    });

    $("#uow_" + index).on("change", function(e){
      $.ajax({ url:'/uos/update_complexity_select_box',
        data: 'uow_id=' + $(this).val()
            + "&index=" + index
      });
    });
  }

  $(document).ready(function(e){
    $("#myTable").find("tr").each(function(index){
      initialize_gross_behaviour(index);
    });
  });

</script>