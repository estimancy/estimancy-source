<% i = @input_index %>
<tr id="myTableRow_<%= i %>">
  <%= hidden_field_tag "module_project_id", params[:module_project_id] %>
  <%= hidden_field_tag "input_id[#{i}]", @input.id, :class => "input_id" %>

  <td class="span2 center">
    <%= link_to "", uow.new_item_path(params[:module_project_id], current_component.id, i), :class => "icon icon-plus", title: "New item", remote: true %>
    <%= link_to "", uow.remove_item_path(params[:module_project_id], @input.id, current_component.id, i), :class => "icon icon-trash", title: "Remove item", remote: true %>
    <span class="icon icon-star <%= @input.flag.blank? ? 'black-question-mark' : @input.flag %>"></span>
    <%= hidden_field_tag "flag[#{i}]", @input.flag.blank? ? 'black-question-mark' : @input.flag %>
  </td>
  <td class="span2 center">
    <%= text_field_tag "name[#{i}]", @input.name, :class => "name input-large" %>
  </td>
  <td class="span1 center">
    <%= select_tag "technology[#{i}]", options_for_select(@organization_technologies, selected: @input.technology_id.nil? ? current_component.organization_technology_id : @input.technology_id), {class: "technology", prompt: I18n.t(:select_technology), required: true} %>
  </td>
  <td class="span1 center">
    <% @input.technology_id.nil? ? (@unit_of_works = current_component.organization_technology.unit_of_works) : (@unit_of_works = @input.organization_technology.unit_of_works) %>
    <%= select_tag "uow[#{i}]", options_for_select(@unit_of_works.map{|uow| [uow.name, uow.id]}, selected: @input.unit_of_work_id.nil? ? current_component.inputs.last.unit_of_work_id : @input.unit_of_work_id), {class: "uow", prompt: I18n.t(:select_uow), required: true} %>
  </td>
  <td class="span1 center">
    <%= select_tag "complexity[#{i}]", options_for_select(@complexities, :selected => @input.complexity_id ), :class => "complexity" %>
  </td>
  <td class="span1 center">
    <%= select_tag "size_unit_type[#{i}]", options_for_select(current_project.organization.size_unit_types.map{|i| [i.name, i.id]}, selected: @input.size_unit_type_id) %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "size_low[#{i}]", @input.size_low, :class => "size_low compressed" %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "size_most_likely[#{i}]", @input.size_most_likely, :class => "size_most_likely compressed" %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "size_high[#{i}]", @input.size_high, :class => "size_high compressed" %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "weight[#{i}]", @input.weight.nil? ? 1 : @input.weight, :class => "weight compressed" %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "gross_low[#{i}]", @input.gross_low, :class => "gross_low compressed", readonly: true %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "gross_most_likely[#{i}]", @input.gross_most_likely, :class => "gross_most_likely compressed", readonly: true %>
  </td>
  <td class="span1 center">
    <%= text_field_tag "gross_high[#{i}]", @input.gross_high, :class => "gross_high compressed", readonly: true %>
  </td>
</tr>

<script>
  function initialize_gross_behaviour(index){

    $(".icon-star").click(function(){
      switch(true) {
        case ($(this).hasClass('black-question-mark')):
          $(this).removeClass('black-question-mark').addClass('purple-exclamation-mark');
          $(this).next().val("purple");
          break;
        case ($(this).hasClass('purple-exclamation-mark')):
          $(this).removeClass('purple-exclamation-mark').addClass('yellow-exclamation-mark');
          $(this).next().val("yellow");
          break;
        case ($(this).hasClass('yellow-exclamation-mark')):
          $(this).removeClass('yellow-exclamation-mark').addClass('green-check-mark');
          $(this).next().val("green");
          break;
        case ($(this).hasClass('green-check-mark')):
          $(this).removeClass('green-check-mark').addClass('blue-info-mark');
          $(this).next().val("blue");
          break;
        case ($(this).hasClass('blue-info-mark')):
          $(this).removeClass('blue-info-mark').addClass('orange-exclamation-mark');
          $(this).next().val("orange");
          break;
        case ($(this).hasClass('orange-exclamation-mark')):
          $(this).removeClass('orange-exclamation-mark').addClass('red-star');
          $(this).next().val("red");
          break;
        case ($(this).hasClass('red-star')):
          $(this).removeClass('red-star').addClass('black-question-mark');
          $(this).next().val("black");
      }
    });


    var selector = "#size_low_" + index +
            ", #size_most_likely_" + index +
            ", #size_high_" + index +
            ", #weight_" + index

    $(selector).on("blur change", function(e){
      // ====
      var selector_id = $(this).attr('id');
      var common_on_id = selector_id.split("_"+index)[0];

      var sum_of_cols = 0;
      $("."+common_on_id).each(function(){
        var current_value = $(this).val();
        if((current_value != "") && (current_value != undefined))
          sum_of_cols += parseFloat(current_value.replace("," , "."));
      });
      $('#overall_'+common_on_id).val(sum_of_cols);

      //=====
      $.ajax({ url:'/uow/load_gross',
        data: 'size_low=' + $('#size_low_' + index).val()
                + '&size_most_likely=' + $('#size_most_likely_' + index).val()
                + '&size_high=' + $('#size_high_' + index).val()
                + '&weight=' + $('#weight_' + index).val()
                + '&technology=' + $('#technology_' + index).val()
                + '&uow=' + $('#uow_' + index).val()
                + '&size_unit_type=' + $('#size_unit_type_' + index).val()
                + '&complexity=' + $('#complexity_' + index).val()
                + '&index=' + $(this).closest('tr').index()
      });

      var gross_selector = "#gross_low_" + index +
              ", #gross_most_likely_" + index +
              ", #gross_high_" + index +
              $(gross_selector).on("blur change", function(e){
                // ====
                var selector_id = $(this).attr('id');
                var common_on_id = selector_id.split("_"+index)[0];

                var sum_of_cols = 0;
                $("."+common_on_id).each(function(){
                  var current_value = $(this).val();
                  if((current_value != "") && (current_value != undefined))
                    sum_of_cols += parseFloat(current_value.replace("," , "."));
                });
                $('#overall_'+common_on_id).val(sum_of_cols);
              });
    });

    $(", #uow_" + index +
            ", #technology_" + index +
            ", #complexity_" + index +
            ", #size_unit_type_" + index ).on("change", function(e){

      $.ajax({ url:'/uow/load_gross',
        data: 'size_low=' + $('#size_low_' + index).val()
                + '&size_most_likely=' + $('#size_most_likely_' + index).val()
                + '&size_high=' + $('#size_high_' + index).val()
                + '&weight=' + $('#weight_' + index).val()
                + '&technology=' + $('#technology_' + index).val()
                + '&size_unit_type=' + $('#size_unit_type_' + index).val()
                + '&complexity=' + $('#complexity_' + index).val()
                + '&index=' + $(this).closest('tr').index()

      });
    });

    // Update the Unit of Works select_box according to the selected technology
    $("#technology_" + index).on("change", function(e){
      $.ajax({ url:'/uow/update_unit_of_works_select_box',
        data: 'technology_id=' + $(this).val()
                + "&index=" + index
      });
      return false;
    });

    $("#uow_" + index).on("change", function(e){
      $.ajax({ url:'/uow/update_complexity_select_box',
        data: 'uow_id=' + $(this).val()
                + "&index=" + index
      });
      return false;
    });
  }

  //  $(document).ready(function(e){
  $("#myTable").find("tr").each(function(index){
    initialize_gross_behaviour(index);
  });
  //  });
</script>