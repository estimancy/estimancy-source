<%= form_tag skb.skb_model_update_size_path(@skb_model), method: "post" do %>

  <%

     if @skb_model.date_min.nil? || @skb_model.date_max.nil?
       if @skb_model.n_max.nil?
         @skb_datas = @skb_model.skb_datas
       else
         @skb_datas = @skb_model.skb_datas.take(@skb_model.n_max.to_i)
       end
     else
       if @skb_model.n_max.nil?
         @skb_datas = @skb_model.skb_datas.where("project_date >= ? AND project_date <= ?", @skb_model.date_min.to_s, @skb_model.date_max.to_s)
       else
         @skb_datas = @skb_model.skb_datas.where("project_date >= ? AND project_date <= ?", @skb_model.date_min.to_s, @skb_model.date_max.to_s).take(@skb_model.n_max.to_i)
       end
     end

     @my_skb_datas = []
     @my_skb_input = []
     @project_list = []
     @skb_model.skb_datas.each_with_index do |i, index_i|
       @skb_input.filters.each_with_index do |f, index_f|
         if (@skb_input.filters.values.reject { |c| c.empty? }[0]) == (i.custom_attributes.values[0].to_s) && (@skb_input.filters.values.reject { |c| c.empty? }[1]) == (i.custom_attributes.values[1].to_s)
           @project_list << i
         end
       end
     end

     if @project_list.blank?
       @project_list = @skb_model.skb_datas.uniq
     end

     @project_list = @project_list.uniq

     @project_list.map do |i|
       @my_skb_datas << { x: i.data, y: i.processing, z: i.data + i.processing, name: i.name, description: simple_format(i.description.to_s) }
     end
     @my_skb_input << { x: @skb_input.nil? ? 0 : @skb_input.data.to_i,
                        y: @skb_input.nil? ? 0 : @skb_input.processing.to_i,
                        z: @skb_input.nil? ? 0 : @skb_input.retained_size.to_i,
                        name: @project.to_s,
                        description: simple_format(@project.description) }
  %>

  <h3 id="skb">
    <strong>
      <%= @skb_model %>
    </strong>
    <hr>
  </h3>



  <% unless @skb_model.date_min.nil? %>
    <div class="row-fluid">
      <div class="span12">
        <h5>
          <strong>
            Nombre de projets sélectionnée
            <span class="project_numbers">
              <%= @project_list.size %> -
              <%= @my_skb_datas.size %>
            </span>
          </strong>
        </h5>
      </div>
    </div>
  <% end %>

  <% unless @skb_model.date_min.nil? %>
    <div class="row-fluid">
      <div class="span12">
        <h5>
          <strong>
            Date Min :
            <span class="project_numbers">
              <%= @skb_model.date_min.strftime("%d %b %Y") %>
            </span>
          </strong>
        </h5>
      </div>
    </div>
  <% end %>

  <% unless @skb_model.date_max.nil? %>
    <div class="row-fluid">
      <div class="span12">
        <h5>
          <strong>
            Date Max :
            <span class="project_numbers">
              <%= @skb_model.date_max.strftime("%d %b %Y") %>
            </span>
          </strong>
        </h5>
      </div>
    </div>
  <% end %>

  <div class="row-fluid">
    <div class="span12">
      <% unless @skb_model.skb_datas.empty? %>
        <p>
          <% arr = ["a", "b", "c", "d"] %>
          <% @skb_model.skb_datas.map(&:custom_attributes).first.keys.each_with_index do |key, i| %>
          <div class="input string required project_title">
            <label class="string required control-label">
              <strong>
                <%= @skb_model.send("filter_#{arr[i]}") %>
              </strong>
            </label>
            <%= select_tag "filters[#{key}]",
                           options_for_select(@skb_model.skb_datas.map(&:custom_attributes).map{|ca| ca[key] }.uniq,
                                              selected: @filters.nil? ? convert_project_category(@project, @skb_model.send("filter_#{arr[i]}")) : @filters[key]),
                           class: "string required input-xlarge filters",
                           prompt: I18n.t(:Indifferent),
                           disabled: !@skb_model.enabled_input %>

            <input type="hidden" name="filters[<%= key %>]" value="<%= @filters.nil? ? convert_project_category(@project, @skb_model.send("filter_#{arr[i]}")) : @filters[key] %>" />
          </div>
        <% end %>
        </p>
      <% end %>
    </div>
  </div>

  <h5>
    <%= @skb_model.label_x || 'Données' %>
  </h5>
  <p>
    <span class="skb_input_data">
      <%= @skb_input.data.nil? ? '-' : @skb_input.data %>
    </span>
  </p>

  <h5>
    <%= @skb_model.label_y || 'Traitements' %>
  </h5>
  <p>
    <span class="skb_input_processing">
      <%= @skb_input.processing.nil? ? '-' : @skb_input.processing %>
    </span>
  </p>

  <h5>
    <%= I18n.t :total_size %>
  </h5>
  <p>
    <span class="skb_input_total">
      <%= (@skb_input.data.to_i + @skb_input.processing.to_i) == 0 ? '-' : (@skb_input.data.to_i + @skb_input.processing.to_i) %> <%= @skb_model.size_unit %>
    </span>
  </p>

  <p>
    <%= I18n.t :move_your_cursor %>
  </p>

  <div class="row-fluid">
    <div class="span12">
      <div id="yolo"></div>
      <hr>
      <%= link_to "RAZ", skb.skb_model_raz_path(@skb_model.id), class: "pull-right btn btn-mini", method: "post" %>
      <% if can? :execute_estimation_plan, @project %>
        <button type="submit" class="btn btn-default btn-mini pull-right button_margin_right">
          <%= I18n.t(:update)%>
        </button>
      <% end %>

      <script>
        $('#yolo').highcharts({
          chart: {
            type: 'bubble',
            plotBorderWidth: 1,
            zoomType: 'xy',
            events: {
              click: function (e) {
                // find the clicked values and the series
                var x = Math.round(e.xAxis[0].value);
                var y = Math.round(e.yAxis[0].value);
                var series = this.series[0];
                // Add it
                series.addPoint({x: x, y: y, z: x+y, name: "<%= @project.to_s.truncate(10) %>", description: "<%= simple_format(@project.description.to_s) %>" });
                series.data[0].remove(false, false);
                $.ajax({
                  url: "<%= skb.skb_model_save_size_path(@skb_model.id) %>",
                  data: {
                    data: x,
                    processing: y,
                  }
                });
              }
            }
          },
          legend: {
            enabled: true
          },
          title: {
            text: '<%= @current_organization %> / <%= @skb_model.name %>'
          },
          xAxis: {
            gridLineWidth: 1,
            title: {
              text: '<%= @skb_model.label_x || 'Données' %>'
            },
            labels: {
              format: '{value}'
            }
          },
          yAxis: {
            startOnTick: false,
            endOnTick: false,
            title: {
              text: '<%= @skb_model.label_y || 'Traitements' %>'
            },
            labels: {
              format: '{value}'
            },
            maxPadding: 0.2
          },
          tooltip: {
            useHTML: true,
            headerFormat: '<table>',
            pointFormat:
            '<h5><b>{point.name}</b></h5>' +
            '<p>{point.description}<br>' +
            '<%= @skb_model.label_x || 'Données' %>: {point.x}<br>' +
            '<%= @skb_model.label_y || 'Traitements' %>: {point.y}</p>' +
            '<p><%= I18n.t :total_size %>: <b>{point.z} <%= @skb_model.size_unit %></b> </p>',
            footerFormat: '</table>',
            followPointer: false
          },
          plotOptions: {
            series: {
              dataLabels: {
                enabled: true,
                format: '{point.name}'
              }
            }
          },
          series: [{
            name: 'Taille de <%= @project.to_s %>',
            color: 'rgba(255, 50, 50, 0.8)',
            data: <%= raw(@my_skb_input.to_json) %>,
            events: {
              selection: function (event) {
                alert("?");
                for (var s in this.series) {
                  this.series[s].update({
                    dataLabels: {
                      style: {
                        maxPadding: 4
                      }
                    },
                    bubble: {
                      minSize: 100,
                      maxSize: 100
                    }
                  });
                }
              }
            }
          },{
            name: "Base de connaissance '<%= @skb_model.name %>'",
            color: 'rgba(50, 50, 255, 0.8)',
            data: <%= raw(@my_skb_datas.to_json) %>,
            events: {
              selection: function (event) {
                for (var s in this.series) {
                  this.series[s].update({
                    dataLabels: {
                      style: {
                        maxPadding: 4
                      }
                    },
                    bubble: {
                      minSize: 100,
                      maxSize: 100
                    }
                  });
                }
              }
            }
          }]
        })
      </script>
    </div>
  </div>
<% end %>